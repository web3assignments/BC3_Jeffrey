{
  "contractName": "HeroesMatch",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "item",
          "type": "uint256"
        }
      ],
      "name": "ReceivedItem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "indexed": false,
          "internalType": "struct Heroes.HeroesClass",
          "name": "challenger",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "indexed": false,
          "internalType": "struct Heroes.HeroesClass",
          "name": "opponent",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "RoundWinner",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CHAMPION_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployed",
      "outputs": [
        {
          "internalType": "contract Heroes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerToMatch",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "internalType": "struct Heroes.HeroesClass",
          "name": "challenger",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "internalType": "struct Heroes.HeroesClass",
          "name": "opponent",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOfUrl",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "season",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "temp",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_season",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_season",
          "type": "string"
        }
      ],
      "name": "setSeason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destroyHero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployHero",
      "outputs": [
        {
          "internalType": "contract Heroes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTemp",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "item",
          "type": "uint256"
        }
      ],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "internalType": "struct Heroes.HeroesClass",
          "name": "_challenger",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "internalType": "struct Heroes.HeroesClass",
          "name": "_opponent",
          "type": "tuple"
        }
      ],
      "name": "initFight",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rarity",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "skill_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "min_skill_damage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max_skill_damage",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Skill.SkillClass",
              "name": "skill_2",
              "type": "tuple"
            }
          ],
          "internalType": "struct Heroes.HeroesClass",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "randomNumberChallenger",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "randomNumberOpponent",
          "type": "uint256"
        }
      ],
      "name": "beginFight",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "randomNumberChallenger",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "randomNumberOpponent",
          "type": "uint256"
        }
      ],
      "name": "didChallengerWin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showYourPresence",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"item\",\"type\":\"uint256\"}],\"name\":\"ReceivedItem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"challenger\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"opponent\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"RoundWinner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHAMPION_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"randomNumberChallenger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randomNumberOpponent\",\"type\":\"uint256\"}],\"name\":\"beginFight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployHero\",\"outputs\":[{\"internalType\":\"contract Heroes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"contract Heroes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroyHero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"randomNumberChallenger\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randomNumberOpponent\",\"type\":\"uint256\"}],\"name\":\"didChallengerWin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"item\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTemp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"_challenger\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"_opponent\",\"type\":\"tuple\"}],\"name\":\"initFight\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_season\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToMatch\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"challenger\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"skill_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"min_skill_damage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max_skill_damage\",\"type\":\"uint256\"}],\"internalType\":\"struct Skill.SkillClass\",\"name\":\"skill_2\",\"type\":\"tuple\"}],\"internalType\":\"struct Heroes.HeroesClass\",\"name\":\"opponent\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfUrl\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"season\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_season\",\"type\":\"string\"}],\"name\":\"setSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showYourPresence\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"temp\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jeffrey Lo-A-Foe\",\"details\":\"All function calls are currently implemented without side effects\",\"kind\":\"dev\",\"methods\":{\"beginFight(uint256,uint256)\":{\"details\":\"extend\",\"params\":{\"randomNumberChallenger\":\"The numbers are random generated from the dApp\",\"randomNumberOpponent\":\"The numbers are random generated from the dApp\"},\"returns\":{\"_0\":\"did challenger win and how much dmg is done\"}},\"didChallengerWin(uint256,uint256)\":{\"details\":\"extend\",\"params\":{\"randomNumberChallenger\":\"The numbers are random generated from the dApp\",\"randomNumberOpponent\":\"The numbers are random generated from the dApp\"},\"returns\":{\"_0\":\"did challenger win\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTemp()\":{\"details\":\"extend\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initFight((string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)),(string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)))\":{\"details\":\"extend\",\"params\":{\"_challenger\":\"contains of name skill damage\",\"_opponent\":\"contains of name skill damage\"},\"returns\":{\"_0\":\"_challenger give back what character is made\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A arena for a 1 on 1 battle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"beginFight(uint256,uint256)\":{\"notice\":\"calculate the winning state\"},\"didChallengerWin(uint256,uint256)\":{\"notice\":\"announce the winner in the event log\"},\"getTemp()\":{\"notice\":\"Weather for some fight variation\"},\"initFight((string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)),(string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)))\":{\"notice\":\"set the fighting arena and say who battles who\"}},\"notice\":\"You can use this contract for a simple one on one battle \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Match.sol\":\"HeroesMatch\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Heroes.sol\":{\"keccak256\":\"0xabf70b907b72490b72b1d4ddd07b59dd7365e25571ed752be869dda9c5aa6aaa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://416c352b0e9a022cd75ba385d4824c87e56fbb2786ed0d8073b294e1f02e61ec\",\"dweb:/ipfs/QmP3gskhEo4KPEdtGyB5jGbVhFSfejUVmHUt1pzsqEM8iL\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Match.sol\":{\"keccak256\":\"0x52f5a24f6a21cca13db2b26444b33ed8bd357ab7be8e7684af7fbfd5ac21e4a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7b2002fcbbd341ce18f0d0c3b1684b7cc114890c7e3a8877e024687043c20dff\",\"dweb:/ipfs/QmWndcK29LhWmhMUHY2pQmPxbBnKion41yZUXXkePu61Uy\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/ProvableAPI.sol\":{\"keccak256\":\"0x09f9aa2dd53d0a24ba882aa2a6ea0a12c2d95f9a1ed0d1d7e7230a971185ce0f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10c4082bf4666af24f439f2f225dcc213160372da121e88012d7ba6c6aa5e8c5\",\"dweb:/ipfs/QmY2ZxJhhRfYqXyHGECs59ux2C8fNkucoSHJut8xpDgntE\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Skill.sol\":{\"keccak256\":\"0xf7364998af0fa132c2869822af3913383da15c2029463acebcc64acdde93214a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://701156e18509d173fbea0fd498e7deed0ca4ff52877875ed46d9036be410c5ca\",\"dweb:/ipfs/QmWZEaFLAsNzPfe48qGG1rigCLJ1EqYTsNp9KYnMFf4Vjk\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/upgrades-core/contracts/Initializable.sol\":{\"keccak256\":\"0x7e710227a99f0d4ee7d7cfba6874192fb4ee80c270f5235c7966a6f3ab484b11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://391395fae95454670cc03bf15b69469bebff8730ad326ed941e7c21cdfe3eff2\",\"dweb:/ipfs/QmPA9bYGsjqmG4bn8SsDLpQpd2sGW4HUfpMR6v66FGR6gA\"]}},\"version\":1}",
  "bytecode": "0x6080604052600062000016620000bb60201b60201c565b905080603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620000c3565b600033905090565b61542e80620000d36000396000f3fe6080604052600436106101cd5760003560e01c80638da5cb5b116100f7578063c50b0fb011610095578063f2fde38b11610064578063f2fde38b1461066b578063f62d188814610694578063f905c15a146106bd578063fdf35a17146106e8576101cd565b8063c50b0fb01461059d578063ca15c873146105c8578063d547741f14610605578063df16e3621461062e576101cd565b806395252560116100d157806395252560146104ff578063a217fddf14610509578063ae025c0c14610534578063c27567c914610572576101cd565b80638da5cb5b1461045a5780639010d07c1461048557806391d14854146104c2576101cd565b806338bbfa501161016f57806367d8e0541161013e57806367d8e054146103c3578063715018a6146103ee5780638668a50c14610405578063897822b114610443576101cd565b806338bbfa501461030757806343d3b1be14610330578063580dad8d1461035b578063673402e514610398576101cd565b80632d1e7f86116101ab5780632d1e7f86146102615780632f2ff15d1461028a57806336568abe146102b357806338bb0623146102dc576101cd565b80631c4b774b146101d2578063248a9ca3146101fb57806327dc297e14610238575b600080fd5b3480156101de57600080fd5b506101f960048036038101906101f49190613c1d565b610713565b005b34801561020757600080fd5b50610222600480360381019061021d91906139d3565b61074f565b60405161022f9190614586565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a9190613a61565b61076f565b005b34801561026d57600080fd5b5061028860048036038101906102839190613b70565b6107c9565b005b34801561029657600080fd5b506102b160048036038101906102ac9190613a25565b6107e3565b005b3480156102bf57600080fd5b506102da60048036038101906102d59190613a25565b610857565b005b3480156102e857600080fd5b506102f16108da565b6040516102fe9190614586565b60405180910390f35b34801561031357600080fd5b5061032e60048036038101906103299190613ab5565b6108fe565b005b34801561033c57600080fd5b50610345610921565b6040516103529190614841565b60405180910390f35b34801561036757600080fd5b50610382600480360381019061037d9190613bb1565b610927565b60405161038f91906147a3565b60405180910390f35b3480156103a457600080fd5b506103ad610b57565b6040516103ba9190614601565b60405180910390f35b3480156103cf57600080fd5b506103d8610bf5565b6040516103e59190614586565b60405180910390f35b3480156103fa57600080fd5b50610403610c19565b005b34801561041157600080fd5b5061042c60048036038101906104279190613c6f565b610d71565b60405161043a92919061455d565b60405180910390f35b34801561044f57600080fd5b50610458610fd7565b005b34801561046657600080fd5b5061046f611134565b60405161047c91906144fe565b60405180910390f35b34801561049157600080fd5b506104ac60048036038101906104a79190613b34565b61115e565b6040516104b991906144fe565b60405180910390f35b3480156104ce57600080fd5b506104e960048036038101906104e49190613a25565b611190565b6040516104f69190614542565b60405180910390f35b6105076111c2565b005b34801561051557600080fd5b5061051e6112f1565b60405161052b9190614586565b60405180910390f35b34801561054057600080fd5b5061055b60048036038101906105569190613981565b6112f8565b6040516105699291906147c5565b60405180910390f35b34801561057e57600080fd5b50610587611a38565b60405161059491906145a1565b60405180910390f35b3480156105a957600080fd5b506105b2611b6a565b6040516105bf9190614601565b60405180910390f35b3480156105d457600080fd5b506105ef60048036038101906105ea91906139d3565b611c08565b6040516105fc9190614841565b60405180910390f35b34801561061157600080fd5b5061062c60048036038101906106279190613a25565b611c2f565b005b34801561063a57600080fd5b5061065560048036038101906106509190613c6f565b611ca3565b6040516106629190614542565b60405180910390f35b34801561067757600080fd5b50610692600480360381019061068d9190613981565b611e91565b005b3480156106a057600080fd5b506106bb60048036038101906106b69190613b70565b612058565b005b3480156106c957600080fd5b506106d261215d565b6040516106df91906145a1565b60405180910390f35b3480156106f457600080fd5b506106fd612183565b60405161070a9190614601565b60405180910390f35b7f6a25488c7d3aabc1977d19779cf2091613a2f71d0a0d13880837c533807c93f83382604051610744929190614519565b60405180910390a150565b600060386000838152602001908152602001600020600201549050919050565b610777612229565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ae57600080fd5b80603b90805190602001906107c49291906135f5565b505050565b80603d90805190602001906107df9291906135f5565b5050565b61080a603860008481526020019081526020016000206002015461080561253d565b611190565b610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090614643565b60405180910390fd5b6108538282612545565b5050565b61085f61253d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c390614783565b60405180910390fd5b6108d682826125d9565b5050565b7f49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a36781565b6000801b600360008060001b815260200190815260200160002081905550505050565b603c5481565b61092f613675565b604051806040016040528084815260200183815250603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160008201518160000190805190602001906109a89291906135f5565b506020820151816001015560408201518160020160008201518160000190805190602001906109d89291906135f5565b5060208201518160010190805190602001906109f59291906135f5565b50604082015181600201556060820151816003015550506060820151816006016000820151816000019080519060200190610a319291906135f5565b506020820151816001019080519060200190610a4e9291906135f5565b50604082015181600201556060820151816003015550505050602082015181600a016000820151816000019080519060200190610a8c9291906135f5565b50602082015181600101556040820151816002016000820151816000019080519060200190610abc9291906135f5565b506020820151816001019080519060200190610ad99291906135f5565b50604082015181600201556060820151816003015550506060820151816006016000820151816000019080519060200190610b159291906135f5565b506020820151816001019080519060200190610b329291906135f5565b5060408201518160020155606082015181600301555050505090505082905092915050565b603b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b505050505081565b7f99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d557381565b610c2161253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790614723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080604051602001610d83906144e9565b60405160208183030381529060405280519060200120603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600001604051602001610dee91906144d2565b604051602081830303815290604052805190602001201415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614703565b60405180910390fd5b604051602001610e54906144e9565b60405160208183030381529060405280519060200120603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600001604051602001610ebf91906144d2565b604051602081830303815290604052805190602001201415610f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0d906146c3565b60405180910390fd5b6000610f228585611ca3565b90508015610f7f576001603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600201600201549250925050610fd0565b6000603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016006016002015492509250505b9250929050565b610fdf61253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106590614723565b60405180910390fd5b603a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110d857600080fd5b505af11580156110ec573d6000803e3d6000fd5b505050506000603a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611188826038600086815260200190815260200160002060000161266d90919063ffffffff16565b905092915050565b60006111ba826038600086815260200190815260200160002060000161268790919063ffffffff16565b905092915050565b66470de4df8200008034101561120d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120490614763565b60405180910390fd5b61124b6040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506126b7565b603c81905550603c54471015611296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128d906146a3565b60405180910390fd5b6112ed6040518060400160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250604051806080016040528060608152602001615399606091396129d8565b5050565b6000801b81565b603e60205280600052604060002060009150905080600001604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113b45780601f10611389576101008083540402835291602001916113b4565b820191906000526020600020905b81548152906001019060200180831161139757829003601f168201915b505050505081526020016001820154815260200160028201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114705780601f1061144557610100808354040283529160200191611470565b820191906000526020600020905b81548152906001019060200180831161145357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115125780601f106114e757610100808354040283529160200191611512565b820191906000526020600020905b8154815290600101906020018083116114f557829003601f168201915b5050505050815260200160028201548152602001600382015481525050815260200160068201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115dc5780601f106115b1576101008083540402835291602001916115dc565b820191906000526020600020905b8154815290600101906020018083116115bf57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561167e5780601f106116535761010080835404028352916020019161167e565b820191906000526020600020905b81548152906001019060200180831161166157829003601f168201915b5050505050815260200160028201548152602001600382015481525050815250509080600a01604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117485780601f1061171d57610100808354040283529160200191611748565b820191906000526020600020905b81548152906001019060200180831161172b57829003601f168201915b505050505081526020016001820154815260200160028201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118045780601f106117d957610100808354040283529160200191611804565b820191906000526020600020905b8154815290600101906020018083116117e757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118a65780601f1061187b576101008083540402835291602001916118a6565b820191906000526020600020905b81548152906001019060200180831161188957829003601f168201915b5050505050815260200160028201548152602001600382015481525050815260200160068201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119705780601f1061194557610100808354040283529160200191611970565b820191906000526020600020905b81548152906001019060200180831161195357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a125780601f106119e757610100808354040283529160200191611a12565b820191906000526020600020905b8154815290600101906020018083116119f557829003601f168201915b505050505081526020016002820154815260200160038201548152505081525050905082565b6000611a4261253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ad1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac890614723565b60405180910390fd5b6000801b604051611ae1906136a9565b8190604051809103906000f5905080158015611b01573d6000803e3d6000fd5b50603a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c005780601f10611bd557610100808354040283529160200191611c00565b820191906000526020600020905b815481529060010190602001808311611be357829003601f168201915b505050505081565b6000611c2860386000848152602001908152602001600020600001612dd5565b9050919050565b611c566038600084815260200190815260200160002060020154611c5161253d565b611190565b611c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8c906146e3565b60405180910390fd5b611c9f82826125d9565b5050565b600081831115611d9e577fbc4b92d339fc9a0c95f60c056c191fea7200e8580924dc0a223bfaa7ab8c1e67603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016001604051611d63939291906147fc565b60405180910390a1611d957f99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d557333612dea565b60019050611e8b565b7fbc4b92d339fc9a0c95f60c056c191fea7200e8580924dc0a223bfaa7ab8c1e67603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000604051611e54939291906147fc565b60405180910390a1611e867f49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a36733612dea565b600090505b92915050565b611e9961253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1f90614723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8f90614683565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560019054906101000a900460ff16806120775750612076612df8565b5b8061208f5750600560009054906101000a900460ff16155b6120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c590614743565b60405180910390fd5b6000600560019054906101000a900460ff161590508015612120576001600560016101000a81548160ff0219169083151502179055506001600560006101000a81548160ff0219169083151502179055505b81603d90805190602001906121369291906135f5565b508015612159576000600560016101000a81548160ff0219169083151502179055505b5050565b603a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606121af7f99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d557333611190565b6121ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121e590614663565b60405180910390fd5b6040518060400160405280601b81526020017f424f5720544f20594f5552204348414d50494f4e20484f454841210000000000815250905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806122b1575060006122af600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e0f565b145b156122c2576122c06000612e1a565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561232c57600080fd5b505af1158015612340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236491906139aa565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461249857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561242057600080fd5b505af1158015612434573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245891906139aa565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561250057600080fd5b505af1158015612514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253891906139aa565b905090565b600033905090565b61256d8160386000858152602001908152602001600020600001612e2b90919063ffffffff16565b156125d55761257a61253d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6126018160386000858152602001908152602001600020600001612e5b90919063ffffffff16565b156126695761260e61253d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600061267c8360000183612e8b565b60001c905092915050565b60006126af836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ef8565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061273f5750600061273d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e0f565b145b156127505761274e6000612e1a565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156127ba57600080fd5b505af11580156127ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f291906139aa565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461292657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156128ae57600080fd5b505af11580156128c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e691906139aa565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b815260040161297f9190614601565b602060405180830381600087803b15801561299957600080fd5b505af11580156129ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d19190613c46565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612a6057506000612a5e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e0f565b145b15612a7157612a6f6000612e1a565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612adb57600080fd5b505af1158015612aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1391906139aa565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612c4757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612bcf57600080fd5b505af1158015612be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0791906139aa565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b8152600401612ca39190614601565b602060405180830381600087803b158015612cbd57600080fd5b505af1158015612cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf59190613c46565b905062030d403a02670de0b6b3a764000001811115612d1a576000801b915050612dcf565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401612d79939291906145bc565b6020604051808303818588803b158015612d9257600080fd5b505af1158015612da6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612dcb91906139fc565b9150505b92915050565b6000612de382600001612f1b565b9050919050565b612df48282612545565b5050565b6000803090506000813b9050600081149250505090565b6000813b9050919050565b6000612e24612f2c565b9050919050565b6000612e53836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613483565b905092915050565b6000612e83836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6134f3565b905092915050565b600081836000018054905011612ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ecd90614623565b60405180910390fd5b826000018281548110612ee557fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600080612f4c731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed612e0f565b1115612fee57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fe56040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506135db565b60019050613480565b600061300d73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1612e0f565b11156130af5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506130a66040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506135db565b60019050613480565b60006130ce73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e612e0f565b11156131705773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506131676040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506135db565b60019050613480565b600061318f73146500cfd35b22e4a392fe0adc06de1a1368ed48612e0f565b11156132315773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132286040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506135db565b60019050613480565b600061325073a2998efd205fb9d4b4963afb70778d6354ad3a41612e0f565b11156132f25773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132e96040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506135db565b60019050613480565b6000613311736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475612e0f565b111561337557736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613480565b60006133947320e12a1f859b3feae5fb2a0a32c18f5a65555bbf612e0f565b11156133f8577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613480565b60006134177351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa612e0f565b111561347b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613480565b600090505b90565b600061348f8383612ef8565b6134e85782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506134ed565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146135cf576000600182039050600060018660000180549050039050600086600001828154811061353e57fe5b906000526020600020015490508087600001848154811061355b57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061359357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506135d5565b60009150505b92915050565b80600290805190602001906135f19291906135f5565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061363657805160ff1916838001178555613664565b82800160010185558215613664579182015b82811115613663578251825591602001919060010190613648565b5b50905061367191906136b6565b5090565b604051806080016040528060608152602001600081526020016136966136d3565b81526020016136a36136d3565b81525090565b6108e380614ab683390190565b5b808211156136cf5760008160009055506001016136b7565b5090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b60008135905061370a81614a70565b92915050565b60008151905061371f81614a70565b92915050565b60008135905061373481614a87565b92915050565b60008151905061374981614a87565b92915050565b600082601f83011261376057600080fd5b813561377361376e82614889565b61485c565b9150808252602083016020830185838301111561378f57600080fd5b61379a8382846149f6565b50505092915050565b600082601f8301126137b457600080fd5b81356137c76137c2826148b5565b61485c565b915080825260208301602083018583830111156137e357600080fd5b6137ee8382846149f6565b50505092915050565b60006080828403121561380957600080fd5b613813608061485c565b9050600082013567ffffffffffffffff81111561382f57600080fd5b61383b848285016137a3565b600083015250602061384f84828501613957565b602083015250604082013567ffffffffffffffff81111561386f57600080fd5b61387b848285016138b3565b604083015250606082013567ffffffffffffffff81111561389b57600080fd5b6138a7848285016138b3565b60608301525092915050565b6000608082840312156138c557600080fd5b6138cf608061485c565b9050600082013567ffffffffffffffff8111156138eb57600080fd5b6138f7848285016137a3565b600083015250602082013567ffffffffffffffff81111561391757600080fd5b613923848285016137a3565b602083015250604061393784828501613957565b604083015250606061394b84828501613957565b60608301525092915050565b60008135905061396681614a9e565b92915050565b60008151905061397b81614a9e565b92915050565b60006020828403121561399357600080fd5b60006139a1848285016136fb565b91505092915050565b6000602082840312156139bc57600080fd5b60006139ca84828501613710565b91505092915050565b6000602082840312156139e557600080fd5b60006139f384828501613725565b91505092915050565b600060208284031215613a0e57600080fd5b6000613a1c8482850161373a565b91505092915050565b60008060408385031215613a3857600080fd5b6000613a4685828601613725565b9250506020613a57858286016136fb565b9150509250929050565b60008060408385031215613a7457600080fd5b6000613a8285828601613725565b925050602083013567ffffffffffffffff811115613a9f57600080fd5b613aab858286016137a3565b9150509250929050565b600080600060608486031215613aca57600080fd5b6000613ad886828701613725565b935050602084013567ffffffffffffffff811115613af557600080fd5b613b01868287016137a3565b925050604084013567ffffffffffffffff811115613b1e57600080fd5b613b2a8682870161374f565b9150509250925092565b60008060408385031215613b4757600080fd5b6000613b5585828601613725565b9250506020613b6685828601613957565b9150509250929050565b600060208284031215613b8257600080fd5b600082013567ffffffffffffffff811115613b9c57600080fd5b613ba8848285016137a3565b91505092915050565b60008060408385031215613bc457600080fd5b600083013567ffffffffffffffff811115613bde57600080fd5b613bea858286016137f7565b925050602083013567ffffffffffffffff811115613c0757600080fd5b613c13858286016137f7565b9150509250929050565b600060208284031215613c2f57600080fd5b6000613c3d84828501613957565b91505092915050565b600060208284031215613c5857600080fd5b6000613c668482850161396c565b91505092915050565b60008060408385031215613c8257600080fd5b6000613c9085828601613957565b9250506020613ca185828601613957565b9150509250929050565b613cb48161498a565b82525050565b613cc381614938565b82525050565b613cd28161494a565b82525050565b613ce181614956565b82525050565b613cf08161499c565b82525050565b613cff816149c0565b82525050565b6000613d10826148f6565b613d1a8185614901565b9350613d2a818560208601614a05565b613d3381614a52565b840191505092915050565b6000613d49826148f6565b613d538185614912565b9350613d63818560208601614a05565b613d6c81614a52565b840191505092915050565b600081546001811660008114613d945760018114613dba57613dfe565b607f6002830416613da58187614901565b955060ff198316865260208601935050613dfe565b60028204613dc88187614901565b9550613dd3856148e1565b60005b82811015613df557815481890152600182019150602081019050613dd6565b80880195505050505b505092915050565b600081546001811660008114613e235760018114613e4857613e8c565b607f6002830416613e348187614923565b955060ff1983168652808601935050613e8c565b60028204613e568187614923565b9550613e61856148e1565b60005b82811015613e8357815481890152600182019150602081019050613e64565b82880195505050505b505092915050565b6000613ea1602283614912565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613f07602f83614912565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000613f6d603783614912565b91507f596f75277265206e6f7420746865206368616d70696f6e20616e642063616e6e60008301527f6f7420696e74696d696461746520746865206172656e610000000000000000006020830152604082019050919050565b6000613fd3602683614912565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614039602e83614912565b91507f706c656173652061646420736f6d652045544820746f20636f76657220666f7260008301527f20746865207175657279206665650000000000000000000000000000000000006020830152604082019050919050565b600061409f600b83614912565b91507f4e6f206f70706f6e656e740000000000000000000000000000000000000000006000830152602082019050919050565b60006140df603083614912565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000614145600d83614912565b91507f4e6f206368616c6c656e676572000000000000000000000000000000000000006000830152602082019050919050565b6000614185602083614912565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006141c5602e83614912565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b600061422b600083614923565b9150600082019050919050565b6000614245601183614912565b91507f4d4f5245205354414b45204e45454445440000000000000000000000000000006000830152602082019050919050565b6000614285602f83614912565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600060808301600083015184820360008601526142fb8282613d05565b915050602083015161431060208601826144b4565b506040830151848203604086015261432882826143ca565b9150506060830151848203606086015261434282826143ca565b9150508091505092915050565b6000608083016000808401858303600087015261436c8382613d77565b9250506001840154905061437f81614a38565b61438c60208701826144b4565b506002840185830360408701526143a38382614434565b9250506006840185830360608701526143bc8382614434565b925050819250505092915050565b600060808301600083015184820360008601526143e78282613d05565b915050602083015184820360208601526144018282613d05565b915050604083015161441660408601826144b4565b50606083015161442960608601826144b4565b508091505092915050565b600060808301600080840185830360008701526144518382613d77565b92505060018401858303602087015261446a8382613d77565b9250506002840154905061447d81614a38565b61448a60408701826144b4565b506003840154905061449b81614a38565b6144a860608701826144b4565b50819250505092915050565b6144bd81614980565b82525050565b6144cc81614980565b82525050565b60006144de8284613e06565b915081905092915050565b60006144f48261421e565b9150819050919050565b60006020820190506145136000830184613cba565b92915050565b600060408201905061452e6000830185613cab565b61453b60208301846144c3565b9392505050565b60006020820190506145576000830184613cc9565b92915050565b60006040820190506145726000830185613cc9565b61457f60208301846144c3565b9392505050565b600060208201905061459b6000830184613cd8565b92915050565b60006020820190506145b66000830184613ce7565b92915050565b60006060820190506145d16000830186613cf6565b81810360208301526145e38185613d3e565b905081810360408301526145f78184613d3e565b9050949350505050565b6000602082019050818103600083015261461b8184613d3e565b905092915050565b6000602082019050818103600083015261463c81613e94565b9050919050565b6000602082019050818103600083015261465c81613efa565b9050919050565b6000602082019050818103600083015261467c81613f60565b9050919050565b6000602082019050818103600083015261469c81613fc6565b9050919050565b600060208201905081810360008301526146bc8161402c565b9050919050565b600060208201905081810360008301526146dc81614092565b9050919050565b600060208201905081810360008301526146fc816140d2565b9050919050565b6000602082019050818103600083015261471c81614138565b9050919050565b6000602082019050818103600083015261473c81614178565b9050919050565b6000602082019050818103600083015261475c816141b8565b9050919050565b6000602082019050818103600083015261477c81614238565b9050919050565b6000602082019050818103600083015261479c81614278565b9050919050565b600060208201905081810360008301526147bd81846142de565b905092915050565b600060408201905081810360008301526147df81856142de565b905081810360208301526147f381846142de565b90509392505050565b60006060820190508181036000830152614816818661434f565b9050818103602083015261482a818561434f565b90506148396040830184613cc9565b949350505050565b600060208201905061485660008301846144c3565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561487f57600080fd5b8060405250919050565b600067ffffffffffffffff8211156148a057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156148cc57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b600061494382614960565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000614995826149d2565b9050919050565b60006149a7826149ae565b9050919050565b60006149b982614960565b9050919050565b60006149cb82614980565b9050919050565b60006149dd826149e4565b9050919050565b60006149ef82614960565b9050919050565b82818337600083830152505050565b60005b83811015614a23578082015181840152602081019050614a08565b83811115614a32576000848401525b50505050565b6000614a4b614a4683614a63565b61492e565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b614a7981614938565b8114614a8457600080fd5b50565b614a9081614956565b8114614a9b57600080fd5b50565b614aa781614980565b8114614ab257600080fd5b5056fe608060405234801561001057600080fd5b506108c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630f1ff7c71461005c578063349b95911461008c57806383197ef0146100bc578063882c2a43146100c6578063a26085f8146100f6575b600080fd5b61007660048036038101906100719190610477565b610112565b6040516100839190610705565b60405180910390f35b6100a660048036038101906100a191906104b8565b610133565b6040516100b39190610727565b60405180910390f35b6100c4610165565b005b6100e060048036038101906100db91906104f9565b61017e565b6040516100ed9190610705565b60405180910390f35b610110600480360381019061010b919061044e565b6101b1565b005b61011a610214565b6001826020018181510191508181525050819050919050565b61013b610248565b600a826040018181510191508181525050600a826060018181510191508181525050819050919050565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b610186610214565b600184111561019d578282606001819052506101a7565b8282604001819052505b8190509392505050565b8073ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101f957600080fd5b505af115801561020d573d6000803e3d6000fd5b5050505050565b60405180608001604052806060815260200160008152602001610235610248565b8152602001610242610248565b81525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b60008135905061027f8161085f565b92915050565b600082601f83011261029657600080fd5b81356102a96102a482610776565b610749565b915080825260208301602083018583830111156102c557600080fd5b6102d083828461080c565b50505092915050565b6000608082840312156102eb57600080fd5b6102f56080610749565b9050600082013567ffffffffffffffff81111561031157600080fd5b61031d84828501610285565b600083015250602061033184828501610439565b602083015250604082013567ffffffffffffffff81111561035157600080fd5b61035d84828501610395565b604083015250606082013567ffffffffffffffff81111561037d57600080fd5b61038984828501610395565b60608301525092915050565b6000608082840312156103a757600080fd5b6103b16080610749565b9050600082013567ffffffffffffffff8111156103cd57600080fd5b6103d984828501610285565b600083015250602082013567ffffffffffffffff8111156103f957600080fd5b61040584828501610285565b602083015250604061041984828501610439565b604083015250606061042d84828501610439565b60608301525092915050565b60008135905061044881610876565b92915050565b60006020828403121561046057600080fd5b600061046e84828501610270565b91505092915050565b60006020828403121561048957600080fd5b600082013567ffffffffffffffff8111156104a357600080fd5b6104af848285016102d9565b91505092915050565b6000602082840312156104ca57600080fd5b600082013567ffffffffffffffff8111156104e457600080fd5b6104f084828501610395565b91505092915050565b60008060006060848603121561050e57600080fd5b600061051c86828701610439565b935050602084013567ffffffffffffffff81111561053957600080fd5b61054586828701610395565b925050604084013567ffffffffffffffff81111561056257600080fd5b61056e868287016102d9565b9150509250925092565b6000610583826107a2565b61058d81856107ad565b935061059d81856020860161081b565b6105a68161084e565b840191505092915050565b600060808301600083015184820360008601526105ce8282610578565b91505060208301516105e360208601826106f6565b50604083015184820360408601526105fb8282610622565b915050606083015184820360608601526106158282610622565b9150508091505092915050565b6000608083016000830151848203600086015261063f8282610578565b915050602083015184820360208601526106598282610578565b915050604083015161066e60408601826106f6565b50606083015161068160608601826106f6565b508091505092915050565b600060808301600083015184820360008601526106a98282610578565b915050602083015184820360208601526106c38282610578565b91505060408301516106d860408601826106f6565b5060608301516106eb60608601826106f6565b508091505092915050565b6106ff81610802565b82525050565b6000602082019050818103600083015261071f81846105b1565b905092915050565b60006020820190508181036000830152610741818461068c565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561076c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561078d57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006107c9826107e2565b9050919050565b60006107db826107be565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561083957808201518184015260208101905061081e565b83811115610848576000848401525b50505050565b6000601f19601f8301169050919050565b610868816107d0565b811461087357600080fd5b50565b61087f81610802565b811461088a57600080fd5b5056fea2646970667358221220194c5ed307e7b318dbbee02b10ae34a5a519fc1372c50af0244b15cc3849b7f164736f6c634300060c00336a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d65393531366436633061266c6f63617469653d44656e48616167292e6c697665776565725b305d2e74656d70a2646970667358221220faae5460b05783c6543619151de3c2c168f029c2d5af7d509d10900b33dbab6a64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106101cd5760003560e01c80638da5cb5b116100f7578063c50b0fb011610095578063f2fde38b11610064578063f2fde38b1461066b578063f62d188814610694578063f905c15a146106bd578063fdf35a17146106e8576101cd565b8063c50b0fb01461059d578063ca15c873146105c8578063d547741f14610605578063df16e3621461062e576101cd565b806395252560116100d157806395252560146104ff578063a217fddf14610509578063ae025c0c14610534578063c27567c914610572576101cd565b80638da5cb5b1461045a5780639010d07c1461048557806391d14854146104c2576101cd565b806338bbfa501161016f57806367d8e0541161013e57806367d8e054146103c3578063715018a6146103ee5780638668a50c14610405578063897822b114610443576101cd565b806338bbfa501461030757806343d3b1be14610330578063580dad8d1461035b578063673402e514610398576101cd565b80632d1e7f86116101ab5780632d1e7f86146102615780632f2ff15d1461028a57806336568abe146102b357806338bb0623146102dc576101cd565b80631c4b774b146101d2578063248a9ca3146101fb57806327dc297e14610238575b600080fd5b3480156101de57600080fd5b506101f960048036038101906101f49190613c1d565b610713565b005b34801561020757600080fd5b50610222600480360381019061021d91906139d3565b61074f565b60405161022f9190614586565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a9190613a61565b61076f565b005b34801561026d57600080fd5b5061028860048036038101906102839190613b70565b6107c9565b005b34801561029657600080fd5b506102b160048036038101906102ac9190613a25565b6107e3565b005b3480156102bf57600080fd5b506102da60048036038101906102d59190613a25565b610857565b005b3480156102e857600080fd5b506102f16108da565b6040516102fe9190614586565b60405180910390f35b34801561031357600080fd5b5061032e60048036038101906103299190613ab5565b6108fe565b005b34801561033c57600080fd5b50610345610921565b6040516103529190614841565b60405180910390f35b34801561036757600080fd5b50610382600480360381019061037d9190613bb1565b610927565b60405161038f91906147a3565b60405180910390f35b3480156103a457600080fd5b506103ad610b57565b6040516103ba9190614601565b60405180910390f35b3480156103cf57600080fd5b506103d8610bf5565b6040516103e59190614586565b60405180910390f35b3480156103fa57600080fd5b50610403610c19565b005b34801561041157600080fd5b5061042c60048036038101906104279190613c6f565b610d71565b60405161043a92919061455d565b60405180910390f35b34801561044f57600080fd5b50610458610fd7565b005b34801561046657600080fd5b5061046f611134565b60405161047c91906144fe565b60405180910390f35b34801561049157600080fd5b506104ac60048036038101906104a79190613b34565b61115e565b6040516104b991906144fe565b60405180910390f35b3480156104ce57600080fd5b506104e960048036038101906104e49190613a25565b611190565b6040516104f69190614542565b60405180910390f35b6105076111c2565b005b34801561051557600080fd5b5061051e6112f1565b60405161052b9190614586565b60405180910390f35b34801561054057600080fd5b5061055b60048036038101906105569190613981565b6112f8565b6040516105699291906147c5565b60405180910390f35b34801561057e57600080fd5b50610587611a38565b60405161059491906145a1565b60405180910390f35b3480156105a957600080fd5b506105b2611b6a565b6040516105bf9190614601565b60405180910390f35b3480156105d457600080fd5b506105ef60048036038101906105ea91906139d3565b611c08565b6040516105fc9190614841565b60405180910390f35b34801561061157600080fd5b5061062c60048036038101906106279190613a25565b611c2f565b005b34801561063a57600080fd5b5061065560048036038101906106509190613c6f565b611ca3565b6040516106629190614542565b60405180910390f35b34801561067757600080fd5b50610692600480360381019061068d9190613981565b611e91565b005b3480156106a057600080fd5b506106bb60048036038101906106b69190613b70565b612058565b005b3480156106c957600080fd5b506106d261215d565b6040516106df91906145a1565b60405180910390f35b3480156106f457600080fd5b506106fd612183565b60405161070a9190614601565b60405180910390f35b7f6a25488c7d3aabc1977d19779cf2091613a2f71d0a0d13880837c533807c93f83382604051610744929190614519565b60405180910390a150565b600060386000838152602001908152602001600020600201549050919050565b610777612229565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ae57600080fd5b80603b90805190602001906107c49291906135f5565b505050565b80603d90805190602001906107df9291906135f5565b5050565b61080a603860008481526020019081526020016000206002015461080561253d565b611190565b610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090614643565b60405180910390fd5b6108538282612545565b5050565b61085f61253d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c390614783565b60405180910390fd5b6108d682826125d9565b5050565b7f49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a36781565b6000801b600360008060001b815260200190815260200160002081905550505050565b603c5481565b61092f613675565b604051806040016040528084815260200183815250603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160008201518160000190805190602001906109a89291906135f5565b506020820151816001015560408201518160020160008201518160000190805190602001906109d89291906135f5565b5060208201518160010190805190602001906109f59291906135f5565b50604082015181600201556060820151816003015550506060820151816006016000820151816000019080519060200190610a319291906135f5565b506020820151816001019080519060200190610a4e9291906135f5565b50604082015181600201556060820151816003015550505050602082015181600a016000820151816000019080519060200190610a8c9291906135f5565b50602082015181600101556040820151816002016000820151816000019080519060200190610abc9291906135f5565b506020820151816001019080519060200190610ad99291906135f5565b50604082015181600201556060820151816003015550506060820151816006016000820151816000019080519060200190610b159291906135f5565b506020820151816001019080519060200190610b329291906135f5565b5060408201518160020155606082015181600301555050505090505082905092915050565b603b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b505050505081565b7f99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d557381565b610c2161253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790614723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080604051602001610d83906144e9565b60405160208183030381529060405280519060200120603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600001604051602001610dee91906144d2565b604051602081830303815290604052805190602001201415610e45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3c90614703565b60405180910390fd5b604051602001610e54906144e9565b60405160208183030381529060405280519060200120603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600001604051602001610ebf91906144d2565b604051602081830303815290604052805190602001201415610f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0d906146c3565b60405180910390fd5b6000610f228585611ca3565b90508015610f7f576001603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600201600201549250925050610fd0565b6000603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016006016002015492509250505b9250929050565b610fdf61253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106590614723565b60405180910390fd5b603a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110d857600080fd5b505af11580156110ec573d6000803e3d6000fd5b505050506000603a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611188826038600086815260200190815260200160002060000161266d90919063ffffffff16565b905092915050565b60006111ba826038600086815260200190815260200160002060000161268790919063ffffffff16565b905092915050565b66470de4df8200008034101561120d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120490614763565b60405180910390fd5b61124b6040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506126b7565b603c81905550603c54471015611296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128d906146a3565b60405180910390fd5b6112ed6040518060400160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250604051806080016040528060608152602001615399606091396129d8565b5050565b6000801b81565b603e60205280600052604060002060009150905080600001604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113b45780601f10611389576101008083540402835291602001916113b4565b820191906000526020600020905b81548152906001019060200180831161139757829003601f168201915b505050505081526020016001820154815260200160028201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114705780601f1061144557610100808354040283529160200191611470565b820191906000526020600020905b81548152906001019060200180831161145357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115125780601f106114e757610100808354040283529160200191611512565b820191906000526020600020905b8154815290600101906020018083116114f557829003601f168201915b5050505050815260200160028201548152602001600382015481525050815260200160068201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115dc5780601f106115b1576101008083540402835291602001916115dc565b820191906000526020600020905b8154815290600101906020018083116115bf57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561167e5780601f106116535761010080835404028352916020019161167e565b820191906000526020600020905b81548152906001019060200180831161166157829003601f168201915b5050505050815260200160028201548152602001600382015481525050815250509080600a01604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117485780601f1061171d57610100808354040283529160200191611748565b820191906000526020600020905b81548152906001019060200180831161172b57829003601f168201915b505050505081526020016001820154815260200160028201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118045780601f106117d957610100808354040283529160200191611804565b820191906000526020600020905b8154815290600101906020018083116117e757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118a65780601f1061187b576101008083540402835291602001916118a6565b820191906000526020600020905b81548152906001019060200180831161188957829003601f168201915b5050505050815260200160028201548152602001600382015481525050815260200160068201604051806080016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119705780601f1061194557610100808354040283529160200191611970565b820191906000526020600020905b81548152906001019060200180831161195357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a125780601f106119e757610100808354040283529160200191611a12565b820191906000526020600020905b8154815290600101906020018083116119f557829003601f168201915b505050505081526020016002820154815260200160038201548152505081525050905082565b6000611a4261253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ad1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac890614723565b60405180910390fd5b6000801b604051611ae1906136a9565b8190604051809103906000f5905080158015611b01573d6000803e3d6000fd5b50603a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c005780601f10611bd557610100808354040283529160200191611c00565b820191906000526020600020905b815481529060010190602001808311611be357829003601f168201915b505050505081565b6000611c2860386000848152602001908152602001600020600001612dd5565b9050919050565b611c566038600084815260200190815260200160002060020154611c5161253d565b611190565b611c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8c906146e3565b60405180910390fd5b611c9f82826125d9565b5050565b600081831115611d9e577fbc4b92d339fc9a0c95f60c056c191fea7200e8580924dc0a223bfaa7ab8c1e67603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016001604051611d63939291906147fc565b60405180910390a1611d957f99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d557333612dea565b60019050611e8b565b7fbc4b92d339fc9a0c95f60c056c191fea7200e8580924dc0a223bfaa7ab8c1e67603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001603e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000604051611e54939291906147fc565b60405180910390a1611e867f49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a36733612dea565b600090505b92915050565b611e9961253d565b73ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1f90614723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8f90614683565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560019054906101000a900460ff16806120775750612076612df8565b5b8061208f5750600560009054906101000a900460ff16155b6120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c590614743565b60405180910390fd5b6000600560019054906101000a900460ff161590508015612120576001600560016101000a81548160ff0219169083151502179055506001600560006101000a81548160ff0219169083151502179055505b81603d90805190602001906121369291906135f5565b508015612159576000600560016101000a81548160ff0219169083151502179055505b5050565b603a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606121af7f99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d557333611190565b6121ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121e590614663565b60405180910390fd5b6040518060400160405280601b81526020017f424f5720544f20594f5552204348414d50494f4e20484f454841210000000000815250905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806122b1575060006122af600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e0f565b145b156122c2576122c06000612e1a565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561232c57600080fd5b505af1158015612340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236491906139aa565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461249857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561242057600080fd5b505af1158015612434573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245891906139aa565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561250057600080fd5b505af1158015612514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253891906139aa565b905090565b600033905090565b61256d8160386000858152602001908152602001600020600001612e2b90919063ffffffff16565b156125d55761257a61253d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6126018160386000858152602001908152602001600020600001612e5b90919063ffffffff16565b156126695761260e61253d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600061267c8360000183612e8b565b60001c905092915050565b60006126af836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ef8565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061273f5750600061273d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e0f565b145b156127505761274e6000612e1a565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156127ba57600080fd5b505af11580156127ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f291906139aa565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461292657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156128ae57600080fd5b505af11580156128c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e691906139aa565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b815260040161297f9190614601565b602060405180830381600087803b15801561299957600080fd5b505af11580156129ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d19190613c46565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612a6057506000612a5e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e0f565b145b15612a7157612a6f6000612e1a565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612adb57600080fd5b505af1158015612aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1391906139aa565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612c4757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612bcf57600080fd5b505af1158015612be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0791906139aa565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b8152600401612ca39190614601565b602060405180830381600087803b158015612cbd57600080fd5b505af1158015612cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf59190613c46565b905062030d403a02670de0b6b3a764000001811115612d1a576000801b915050612dcf565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401612d79939291906145bc565b6020604051808303818588803b158015612d9257600080fd5b505af1158015612da6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612dcb91906139fc565b9150505b92915050565b6000612de382600001612f1b565b9050919050565b612df48282612545565b5050565b6000803090506000813b9050600081149250505090565b6000813b9050919050565b6000612e24612f2c565b9050919050565b6000612e53836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613483565b905092915050565b6000612e83836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6134f3565b905092915050565b600081836000018054905011612ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ecd90614623565b60405180910390fd5b826000018281548110612ee557fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600080612f4c731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed612e0f565b1115612fee57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fe56040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506135db565b60019050613480565b600061300d73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1612e0f565b11156130af5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506130a66040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506135db565b60019050613480565b60006130ce73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e612e0f565b11156131705773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506131676040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506135db565b60019050613480565b600061318f73146500cfd35b22e4a392fe0adc06de1a1368ed48612e0f565b11156132315773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132286040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506135db565b60019050613480565b600061325073a2998efd205fb9d4b4963afb70778d6354ad3a41612e0f565b11156132f25773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132e96040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506135db565b60019050613480565b6000613311736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475612e0f565b111561337557736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613480565b60006133947320e12a1f859b3feae5fb2a0a32c18f5a65555bbf612e0f565b11156133f8577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613480565b60006134177351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa612e0f565b111561347b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613480565b600090505b90565b600061348f8383612ef8565b6134e85782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506134ed565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146135cf576000600182039050600060018660000180549050039050600086600001828154811061353e57fe5b906000526020600020015490508087600001848154811061355b57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061359357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506135d5565b60009150505b92915050565b80600290805190602001906135f19291906135f5565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061363657805160ff1916838001178555613664565b82800160010185558215613664579182015b82811115613663578251825591602001919060010190613648565b5b50905061367191906136b6565b5090565b604051806080016040528060608152602001600081526020016136966136d3565b81526020016136a36136d3565b81525090565b6108e380614ab683390190565b5b808211156136cf5760008160009055506001016136b7565b5090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b60008135905061370a81614a70565b92915050565b60008151905061371f81614a70565b92915050565b60008135905061373481614a87565b92915050565b60008151905061374981614a87565b92915050565b600082601f83011261376057600080fd5b813561377361376e82614889565b61485c565b9150808252602083016020830185838301111561378f57600080fd5b61379a8382846149f6565b50505092915050565b600082601f8301126137b457600080fd5b81356137c76137c2826148b5565b61485c565b915080825260208301602083018583830111156137e357600080fd5b6137ee8382846149f6565b50505092915050565b60006080828403121561380957600080fd5b613813608061485c565b9050600082013567ffffffffffffffff81111561382f57600080fd5b61383b848285016137a3565b600083015250602061384f84828501613957565b602083015250604082013567ffffffffffffffff81111561386f57600080fd5b61387b848285016138b3565b604083015250606082013567ffffffffffffffff81111561389b57600080fd5b6138a7848285016138b3565b60608301525092915050565b6000608082840312156138c557600080fd5b6138cf608061485c565b9050600082013567ffffffffffffffff8111156138eb57600080fd5b6138f7848285016137a3565b600083015250602082013567ffffffffffffffff81111561391757600080fd5b613923848285016137a3565b602083015250604061393784828501613957565b604083015250606061394b84828501613957565b60608301525092915050565b60008135905061396681614a9e565b92915050565b60008151905061397b81614a9e565b92915050565b60006020828403121561399357600080fd5b60006139a1848285016136fb565b91505092915050565b6000602082840312156139bc57600080fd5b60006139ca84828501613710565b91505092915050565b6000602082840312156139e557600080fd5b60006139f384828501613725565b91505092915050565b600060208284031215613a0e57600080fd5b6000613a1c8482850161373a565b91505092915050565b60008060408385031215613a3857600080fd5b6000613a4685828601613725565b9250506020613a57858286016136fb565b9150509250929050565b60008060408385031215613a7457600080fd5b6000613a8285828601613725565b925050602083013567ffffffffffffffff811115613a9f57600080fd5b613aab858286016137a3565b9150509250929050565b600080600060608486031215613aca57600080fd5b6000613ad886828701613725565b935050602084013567ffffffffffffffff811115613af557600080fd5b613b01868287016137a3565b925050604084013567ffffffffffffffff811115613b1e57600080fd5b613b2a8682870161374f565b9150509250925092565b60008060408385031215613b4757600080fd5b6000613b5585828601613725565b9250506020613b6685828601613957565b9150509250929050565b600060208284031215613b8257600080fd5b600082013567ffffffffffffffff811115613b9c57600080fd5b613ba8848285016137a3565b91505092915050565b60008060408385031215613bc457600080fd5b600083013567ffffffffffffffff811115613bde57600080fd5b613bea858286016137f7565b925050602083013567ffffffffffffffff811115613c0757600080fd5b613c13858286016137f7565b9150509250929050565b600060208284031215613c2f57600080fd5b6000613c3d84828501613957565b91505092915050565b600060208284031215613c5857600080fd5b6000613c668482850161396c565b91505092915050565b60008060408385031215613c8257600080fd5b6000613c9085828601613957565b9250506020613ca185828601613957565b9150509250929050565b613cb48161498a565b82525050565b613cc381614938565b82525050565b613cd28161494a565b82525050565b613ce181614956565b82525050565b613cf08161499c565b82525050565b613cff816149c0565b82525050565b6000613d10826148f6565b613d1a8185614901565b9350613d2a818560208601614a05565b613d3381614a52565b840191505092915050565b6000613d49826148f6565b613d538185614912565b9350613d63818560208601614a05565b613d6c81614a52565b840191505092915050565b600081546001811660008114613d945760018114613dba57613dfe565b607f6002830416613da58187614901565b955060ff198316865260208601935050613dfe565b60028204613dc88187614901565b9550613dd3856148e1565b60005b82811015613df557815481890152600182019150602081019050613dd6565b80880195505050505b505092915050565b600081546001811660008114613e235760018114613e4857613e8c565b607f6002830416613e348187614923565b955060ff1983168652808601935050613e8c565b60028204613e568187614923565b9550613e61856148e1565b60005b82811015613e8357815481890152600182019150602081019050613e64565b82880195505050505b505092915050565b6000613ea1602283614912565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613f07602f83614912565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000613f6d603783614912565b91507f596f75277265206e6f7420746865206368616d70696f6e20616e642063616e6e60008301527f6f7420696e74696d696461746520746865206172656e610000000000000000006020830152604082019050919050565b6000613fd3602683614912565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614039602e83614912565b91507f706c656173652061646420736f6d652045544820746f20636f76657220666f7260008301527f20746865207175657279206665650000000000000000000000000000000000006020830152604082019050919050565b600061409f600b83614912565b91507f4e6f206f70706f6e656e740000000000000000000000000000000000000000006000830152602082019050919050565b60006140df603083614912565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000614145600d83614912565b91507f4e6f206368616c6c656e676572000000000000000000000000000000000000006000830152602082019050919050565b6000614185602083614912565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006141c5602e83614912565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b600061422b600083614923565b9150600082019050919050565b6000614245601183614912565b91507f4d4f5245205354414b45204e45454445440000000000000000000000000000006000830152602082019050919050565b6000614285602f83614912565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600060808301600083015184820360008601526142fb8282613d05565b915050602083015161431060208601826144b4565b506040830151848203604086015261432882826143ca565b9150506060830151848203606086015261434282826143ca565b9150508091505092915050565b6000608083016000808401858303600087015261436c8382613d77565b9250506001840154905061437f81614a38565b61438c60208701826144b4565b506002840185830360408701526143a38382614434565b9250506006840185830360608701526143bc8382614434565b925050819250505092915050565b600060808301600083015184820360008601526143e78282613d05565b915050602083015184820360208601526144018282613d05565b915050604083015161441660408601826144b4565b50606083015161442960608601826144b4565b508091505092915050565b600060808301600080840185830360008701526144518382613d77565b92505060018401858303602087015261446a8382613d77565b9250506002840154905061447d81614a38565b61448a60408701826144b4565b506003840154905061449b81614a38565b6144a860608701826144b4565b50819250505092915050565b6144bd81614980565b82525050565b6144cc81614980565b82525050565b60006144de8284613e06565b915081905092915050565b60006144f48261421e565b9150819050919050565b60006020820190506145136000830184613cba565b92915050565b600060408201905061452e6000830185613cab565b61453b60208301846144c3565b9392505050565b60006020820190506145576000830184613cc9565b92915050565b60006040820190506145726000830185613cc9565b61457f60208301846144c3565b9392505050565b600060208201905061459b6000830184613cd8565b92915050565b60006020820190506145b66000830184613ce7565b92915050565b60006060820190506145d16000830186613cf6565b81810360208301526145e38185613d3e565b905081810360408301526145f78184613d3e565b9050949350505050565b6000602082019050818103600083015261461b8184613d3e565b905092915050565b6000602082019050818103600083015261463c81613e94565b9050919050565b6000602082019050818103600083015261465c81613efa565b9050919050565b6000602082019050818103600083015261467c81613f60565b9050919050565b6000602082019050818103600083015261469c81613fc6565b9050919050565b600060208201905081810360008301526146bc8161402c565b9050919050565b600060208201905081810360008301526146dc81614092565b9050919050565b600060208201905081810360008301526146fc816140d2565b9050919050565b6000602082019050818103600083015261471c81614138565b9050919050565b6000602082019050818103600083015261473c81614178565b9050919050565b6000602082019050818103600083015261475c816141b8565b9050919050565b6000602082019050818103600083015261477c81614238565b9050919050565b6000602082019050818103600083015261479c81614278565b9050919050565b600060208201905081810360008301526147bd81846142de565b905092915050565b600060408201905081810360008301526147df81856142de565b905081810360208301526147f381846142de565b90509392505050565b60006060820190508181036000830152614816818661434f565b9050818103602083015261482a818561434f565b90506148396040830184613cc9565b949350505050565b600060208201905061485660008301846144c3565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561487f57600080fd5b8060405250919050565b600067ffffffffffffffff8211156148a057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156148cc57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b600061494382614960565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000614995826149d2565b9050919050565b60006149a7826149ae565b9050919050565b60006149b982614960565b9050919050565b60006149cb82614980565b9050919050565b60006149dd826149e4565b9050919050565b60006149ef82614960565b9050919050565b82818337600083830152505050565b60005b83811015614a23578082015181840152602081019050614a08565b83811115614a32576000848401525b50505050565b6000614a4b614a4683614a63565b61492e565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b614a7981614938565b8114614a8457600080fd5b50565b614a9081614956565b8114614a9b57600080fd5b50565b614aa781614980565b8114614ab257600080fd5b5056fe608060405234801561001057600080fd5b506108c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630f1ff7c71461005c578063349b95911461008c57806383197ef0146100bc578063882c2a43146100c6578063a26085f8146100f6575b600080fd5b61007660048036038101906100719190610477565b610112565b6040516100839190610705565b60405180910390f35b6100a660048036038101906100a191906104b8565b610133565b6040516100b39190610727565b60405180910390f35b6100c4610165565b005b6100e060048036038101906100db91906104f9565b61017e565b6040516100ed9190610705565b60405180910390f35b610110600480360381019061010b919061044e565b6101b1565b005b61011a610214565b6001826020018181510191508181525050819050919050565b61013b610248565b600a826040018181510191508181525050600a826060018181510191508181525050819050919050565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b610186610214565b600184111561019d578282606001819052506101a7565b8282604001819052505b8190509392505050565b8073ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101f957600080fd5b505af115801561020d573d6000803e3d6000fd5b5050505050565b60405180608001604052806060815260200160008152602001610235610248565b8152602001610242610248565b81525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b60008135905061027f8161085f565b92915050565b600082601f83011261029657600080fd5b81356102a96102a482610776565b610749565b915080825260208301602083018583830111156102c557600080fd5b6102d083828461080c565b50505092915050565b6000608082840312156102eb57600080fd5b6102f56080610749565b9050600082013567ffffffffffffffff81111561031157600080fd5b61031d84828501610285565b600083015250602061033184828501610439565b602083015250604082013567ffffffffffffffff81111561035157600080fd5b61035d84828501610395565b604083015250606082013567ffffffffffffffff81111561037d57600080fd5b61038984828501610395565b60608301525092915050565b6000608082840312156103a757600080fd5b6103b16080610749565b9050600082013567ffffffffffffffff8111156103cd57600080fd5b6103d984828501610285565b600083015250602082013567ffffffffffffffff8111156103f957600080fd5b61040584828501610285565b602083015250604061041984828501610439565b604083015250606061042d84828501610439565b60608301525092915050565b60008135905061044881610876565b92915050565b60006020828403121561046057600080fd5b600061046e84828501610270565b91505092915050565b60006020828403121561048957600080fd5b600082013567ffffffffffffffff8111156104a357600080fd5b6104af848285016102d9565b91505092915050565b6000602082840312156104ca57600080fd5b600082013567ffffffffffffffff8111156104e457600080fd5b6104f084828501610395565b91505092915050565b60008060006060848603121561050e57600080fd5b600061051c86828701610439565b935050602084013567ffffffffffffffff81111561053957600080fd5b61054586828701610395565b925050604084013567ffffffffffffffff81111561056257600080fd5b61056e868287016102d9565b9150509250925092565b6000610583826107a2565b61058d81856107ad565b935061059d81856020860161081b565b6105a68161084e565b840191505092915050565b600060808301600083015184820360008601526105ce8282610578565b91505060208301516105e360208601826106f6565b50604083015184820360408601526105fb8282610622565b915050606083015184820360608601526106158282610622565b9150508091505092915050565b6000608083016000830151848203600086015261063f8282610578565b915050602083015184820360208601526106598282610578565b915050604083015161066e60408601826106f6565b50606083015161068160608601826106f6565b508091505092915050565b600060808301600083015184820360008601526106a98282610578565b915050602083015184820360208601526106c38282610578565b91505060408301516106d860408601826106f6565b5060608301516106eb60608601826106f6565b508091505092915050565b6106ff81610802565b82525050565b6000602082019050818103600083015261071f81846105b1565b905092915050565b60006020820190508181036000830152610741818461068c565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561076c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561078d57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006107c9826107e2565b9050919050565b60006107db826107be565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561083957808201518184015260208101905061081e565b83811115610848576000848401525b50505050565b6000601f19601f8301169050919050565b610868816107d0565b811461087357600080fd5b50565b61087f81610802565b811461088a57600080fd5b5056fea2646970667358221220194c5ed307e7b318dbbee02b10ae34a5a519fc1372c50af0244b15cc3849b7f164736f6c634300060c00336a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d65393531366436633061266c6f63617469653d44656e48616167292e6c697665776565725b305d2e74656d70a2646970667358221220faae5460b05783c6543619151de3c2c168f029c2d5af7d509d10900b33dbab6a64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "677:4726:2:-:0;;;865:17:10;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;677:4726:2;;590:104:8;643:15;677:10;670:17;;590:104;:::o;677:4726:2:-;;;;;;;",
  "deployedSourceMap": "677:4726:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2532:88;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4272:112:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1444:183:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1734:82;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4634:223:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5808:205;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:55:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15562:186:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;813:25:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2908:238;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;788:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;871:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1689:145:10;;;;;;;;;;;;;:::i;:::-;;3488:790:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1822:113;;;;;;;;;;;;;:::i;:::-;;1066:77:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3955:136:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2940:137;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2149:377:2;;;:::i;:::-;;1717:49:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1346:45:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1941:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;844:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3245:125:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5091:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4594:572:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1983:240:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1633:95:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;760:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5172:228;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2532:88;2583:30;2596:10;2608:4;2583:30;;;;;;;:::i;:::-;;;;;;;;2532:88;:::o;4272:112:9:-;4329:7;4355:6;:12;4362:4;4355:12;;;;;;;;;;;:22;;;4348:29;;4272:112;;;:::o;1444:183:2:-;1567:20;:18;:20::i;:::-;1553:34;;:10;:34;;;1549:48;;1589:8;;;1549:48;1614:6;1607:4;:13;;;;;;;;;;;;:::i;:::-;;1444:183;;:::o;1734:82::-;1802:7;1793:6;:16;;;;;;;;;;;;:::i;:::-;;1734:82;:::o;4634:223:9:-;4717:45;4725:6;:12;4732:4;4725:12;;;;;;;;;;;:22;;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;5808:205::-;5905:12;:10;:12::i;:::-;5894:23;;:7;:23;;;5886:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;:::-;5808:205;;:::o;938:55:2:-;975:18;938:55;:::o;15562:186:4:-;15739:1;15731:10;;15694:22;:34;15725:1;15717:10;;15694:34;;;;;;;;;;;:47;;;;15562:186;;;:::o;813:25:2:-;;;;:::o;2908:238::-;3019:25;;:::i;:::-;3083:28;;;;;;;;3089:11;3083:28;;;;3101:9;3083:28;;;3056:12;:24;3069:10;3056:24;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3128:11;3121:18;;2908:238;;;;:::o;788:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;871:61::-;911:21;871:61;:::o;1689:145:10:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:1:::1;1758:40;;1779:6;;;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6;;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;3488:790:2:-;3580:4;3586;3728:20;;;;;;;:::i;:::-;;;;;;;;;;;;;3718:31;;;;;;3672:12;:24;3685:10;3672:24;;;;;;;;;;;;;;;:35;;:40;;3655:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3645:69;;;;;;:104;;3637:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;3866:20;;;;;;;:::i;:::-;;;;;;;;;;;;;3856:31;;;;;;3812:12;:24;3825:10;3812:24;;;;;;;;;;;;;;;:33;;:38;;3795:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;3785:67;;;;;;:102;;3777:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;3914:11;3928:62;3945:22;3969:20;3928:16;:62::i;:::-;3914:76;;4051:6;4048:224;;;4081:4;4087:12;:24;4100:10;4087:24;;;;;;;;;;;;;;;:35;;:43;;:60;;;4073:75;;;;;;;4048:224;4195:5;4202:12;:24;4215:10;4202:24;;;;;;;;;;;;;;;:33;;:41;;:58;;;4187:74;;;;;3488:790;;;;;;:::o;1822:113::-;1280:12:10;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1871:8:2::1;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1925:1;1899:8;;:29;;;;;;;;;;;;;;;;;;1822:113::o:0;1066:77:10:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;3955:136:9:-;4028:7;4054:30;4078:5;4054:6;:12;4061:4;4054:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4047:37;;3955:136;;;;:::o;2940:137::-;3009:4;3032:38;3062:7;3032:6;:12;3039:4;3032:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3025:45;;2940:137;;;;:::o;2149:377:2:-;2193:10;1055:7;1042:9;:20;;1034:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2227:24:::1;;;;;;;;;;;;;;;;;::::0;:17:::1;:24::i;:::-;2214:10;:37;;;;2295:10;;2270:21;:35;;2261:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2382:137;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;:14;:137::i;:::-;;2149:377:::0;:::o;1717:49:9:-;1762:4;1717:49;;;:::oo;1941:133::-;1989:6;1280:12:10;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2035:4:2::1;2018:24:::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2007:8;;:35;;;;;;;;;;;;;;;;;;2059:8;;;;;;;;;;;2052:15;;1941:133:::0;:::o;844:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3245:125:9:-;3308:7;3334:29;:6;:12;3341:4;3334:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3327:36;;3245:125;;;:::o;5091:226::-;5175:45;5183:6;:12;5190:4;5183:12;;;;;;;;;;;:22;;;5207:12;:10;:12::i;:::-;5175:7;:45::i;:::-;5167:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;5284:26;5296:4;5302:7;5284:11;:26::i;:::-;5091:226;;:::o;4594:572:2:-;4691:4;4735:20;4710:22;:45;4707:453;;;4776:89;4788:12;:24;4801:10;4788:24;;;;;;;;;;;;;;;:35;;4825:12;:24;4838:10;4825:24;;;;;;;;;;;;;;;:33;;4860:4;4776:89;;;;;;;;:::i;:::-;;;;;;;;4879:37;911:21;4905:10;4879;:37::i;:::-;4937:4;4930:11;;;;4707:453;4985:90;4997:12;:24;5010:10;4997:24;;;;;;;;;;;;;;;:35;;5034:12;:24;5047:10;5034:24;;;;;;;;;;;;;;;:33;;5069:5;4985:90;;;;;;;;:::i;:::-;;;;;;;;5089:34;975:18;5112:10;5089;:34::i;:::-;5144:5;5137:12;;4594:572;;;;;:::o;1983:240:10:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2180:8;2151:38;;2172:6;;;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;;:17;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;1633:95:2:-;1057:12:13;;;;;;;;;;;:31;;;;1073:15;:13;:15::i;:::-;1057:31;:47;;;;1093:11;;;;;;;;;;;1092:12;1057:47;1049:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1162:19;1185:12;;;;;;;;;;;1184:13;1162:35;;1207:14;1203:80;;;1246:4;1231:12;;:19;;;;;;;;;;;;;;;;;;1272:4;1258:11;;:18;;;;;;;;;;;;;;;;;;1203:80;1714:7:2::1;1705:6;:16;;;;;;;;;;;;:::i;:::-;;1301:14:13::0;1297:55;;;1340:5;1325:12;;:20;;;;;;;;;;;;;;;;;;1297:55;1633:95:2;;:::o;760:22::-;;;;;;;;;;;;;:::o;5172:228::-;5221:13;5254:33;911:21;5276:10;5254:7;:33::i;:::-;5246:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;5357:36;;;;;;;;;;;;;;;;;;;5172:228;:::o;37318:130:4:-;37378:24;11970:1;11946:26;;11954:3;;;;;;;;;;;11946:26;;;11945:64;;;;12007:1;11978:25;11998:3;;;;;;;;;;;11978:11;:25::i;:::-;:30;11945:64;11941:130;;;12025:35;11602:1;12025:19;:35::i;:::-;;11941:130;12105:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12084:37;;12092:8;;;;;;;;;;12084:37;;;12080:106;;12158:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12137:8;;:38;;;;;;;;;;;;;;;;;;12080:106;37421:8:::1;::::0;::::1;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37414:27;;37318:130:::0;:::o;590:104:8:-;643:15;677:10;670:17;;590:104;:::o;7015:184:9:-;7088:33;7113:7;7088:6;:12;7095:4;7088:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;7142:40;;7160:7;7142:40;;7154:4;7142:40;;;;;;;;;;7084:109;7015:184;;:::o;7205:188::-;7279:36;7307:7;7279:6;:12;7286:4;7279:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;7336:40;;7354:7;7336:40;;7348:4;7336:40;;;;;;;;;;7275:112;7205:188;;:::o;6085:147:12:-;6159:7;6201:22;6205:3;:10;;6217:5;6201:3;:22::i;:::-;6193:31;;6178:47;;6085:147;;;;:::o;5401:156::-;5481:4;5504:46;5514:3;:10;;5542:5;5534:14;;5526:23;;5504:9;:46::i;:::-;5497:53;;5401:156;;;;:::o;15754::4:-;15838:16;11970:1;11946:26;;11954:3;;;;;;;;;;;11946:26;;;11945:64;;;;12007:1;11978:25;11998:3;;;;;;;;;;;11978:11;:25::i;:::-;:30;11945:64;11941:130;;;12025:35;11602:1;12025:19;:35::i;:::-;;11941:130;12105:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12084:37;;12092:8;;;;;;;;;;12084:37;;;12080:106;;12158:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12137:8;;:38;;;;;;;;;;;;;;;;;;12080:106;15873:8:::1;::::0;::::1;;;;;;;;:17;;;15891:11;15873:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15866:37;;15754:156:::0;;;:::o;16105:354::-;16206:11;11970:1;11946:26;;11954:3;;;;;;;;;;;11946:26;;;11945:64;;;;12007:1;11978:25;11998:3;;;;;;;;;;;11978:11;:25::i;:::-;:30;11945:64;11941:130;;;12025:35;11602:1;12025:19;:35::i;:::-;;11941:130;12105:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12084:37;;12092:8;;;;;;;;;;12084:37;;;12080:106;;12158:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12137:8;;:38;;;;;;;;;;;;;;;;;;12080:106;16229:10:::1;16242:8:::0;::::1;;;;;;;;;;:17;;;16260:11;16242:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16229:43;;16318:6;16304:11;:20;16294:7;:30;16286:5;:38;16282:104;;;16347:1;16340:8:::0;::::1;;;;;;16282:104;16402:8;::::0;::::1;;;;;;;;:14;;;16424:5;16431:1;16434:11;16447:4;16402:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16395:57;;;12195:1;16105:354:::0;;;;:::o;5638:115:12:-;5701:7;5727:19;5735:3;:10;;5727:7;:19::i;:::-;5720:26;;5638:115;;;:::o;6578:110:9:-;6656:25;6667:4;6673:7;6656:10;:25::i;:::-;6578:110;;:::o;1442:498:13:-;1489:4;1830:12;1853:4;1830:28;;1864:10;1909:4;1897:17;1891:23;;1934:1;1928:2;:7;1921:14;;;;1442:498;:::o;37454:147:4:-;37513:10;37579:5;37567:18;37558:27;;37544:51;;;:::o;12678:205::-;12743:16;12855:21;:19;:21::i;:::-;12848:28;;12678:205;;;:::o;4864:141:12:-;4934:4;4957:41;4962:3;:10;;4990:5;4982:14;;4974:23;;4957:4;:41::i;:::-;4950:48;;4864:141;;;;:::o;5173:147::-;5246:4;5269:44;5277:3;:10;;5305:5;5297:14;;5289:23;;5269:7;:44::i;:::-;5262:51;;5173:147;;;;:::o;4423:201::-;4490:7;4538:5;4517:3;:11;;:18;;;;:26;4509:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3895:1;3872:3;:12;;:19;3885:5;3872:19;;;;;;;;;;;;:24;;3865:31;;3776:127;;;;:::o;3984:107::-;4040:7;4066:3;:11;;:18;;;;4059:25;;3984:107;;;:::o;13157:2031:4:-;13206:16;13296:1;13238:55;13250:42;13238:11;:55::i;:::-;:59;13234:246;;;13349:42;13323:3;;:69;;;;;;;;;;;;;;;;;;13406:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13465:4;13458:11;;;;13234:246;13551:1;13493:55;13505:42;13493:11;:55::i;:::-;:59;13489:255;;;13612:42;13586:3;;:69;;;;;;;;;;;;;;;;;;13669:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13729:4;13722:11;;;;13489:255;13815:1;13757:55;13769:42;13757:11;:55::i;:::-;:59;13753:250;;;13874:42;13848:3;;:69;;;;;;;;;;;;;;;;;;13931:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13988:4;13981:11;;;;13753:250;14074:1;14016:55;14028:42;14016:11;:55::i;:::-;:59;14012:254;;;14135:42;14109:3;;:69;;;;;;;;;;;;;;;;;;14192:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14251:4;14244:11;;;;14012:254;14337:1;14279:55;14291:42;14279:11;:55::i;:::-;:59;14275:252;;;14397:42;14371:3;;:69;;;;;;;;;;;;;;;;;;14454:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14512:4;14505:11;;;;14275:252;14598:1;14540:55;14552:42;14540:11;:55::i;:::-;:59;14536:202;;;14659:42;14633:3;;:69;;;;;;;;;;;;;;;;;;14723:4;14716:11;;;;14536:202;14809:1;14751:55;14763:42;14751:11;:55::i;:::-;:59;14747:201;;;14869:42;14843:3;;:69;;;;;;;;;;;;;;;;;;14933:4;14926:11;;;;14747:201;15019:1;14961:55;14973:42;14961:11;:55::i;:::-;:59;14957:203;;;15081:42;15055:3;;:69;;;;;;;;;;;;;;;;;;15145:4;15138:11;;;;14957:203;15176:5;15169:12;;13157:2031;;:::o;1611:404:12:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;1732:3;:11;;1749:5;1732:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:3;:11;;:18;;;;1890:3;:12;;:19;1903:5;1890:19;;;;;;;;;;;:40;;;;1951:4;1944:11;;;;1690:319;1993:5;1986:12;;1611:404;;;;;:::o;2183:1512::-;2249:4;2365:18;2386:3;:12;;:19;2399:5;2386:19;;;;;;;;;;;;2365:40;;2434:1;2420:10;:15;2416:1273;;2777:21;2814:1;2801:10;:14;2777:38;;2829:17;2870:1;2849:3;:11;;:18;;;;:22;2829:42;;3111:17;3131:3;:11;;3143:9;3131:22;;;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;:38;;;;3391:1;3375:13;:17;3349:3;:12;;:23;3362:9;3349:23;;;;;;;;;;;:43;;;;3498:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;2183:1512;;;;;:::o;12889:125:4:-;12994:13;12970:21;:37;;;;;;;;;;;;:::i;:::-;;12889:125;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:134::-;;226:6;220:13;211:22;;238:33;265:5;238:33;:::i;:::-;205:71;;;;:::o;283:130::-;;363:6;350:20;341:29;;375:33;402:5;375:33;:::i;:::-;335:78;;;;:::o;420:134::-;;504:6;498:13;489:22;;516:33;543:5;516:33;:::i;:::-;483:71;;;;:::o;562:440::-;;663:3;656:4;648:6;644:17;640:27;630:2;;681:1;678;671:12;630:2;718:6;705:20;740:64;755:48;796:6;755:48;:::i;:::-;740:64;:::i;:::-;731:73;;824:6;817:5;810:21;860:4;852:6;848:17;893:4;886:5;882:16;928:3;919:6;914:3;910:16;907:25;904:2;;;945:1;942;935:12;904:2;955:41;989:6;984:3;979;955:41;:::i;:::-;623:379;;;;;;;:::o;1011:442::-;;1113:3;1106:4;1098:6;1094:17;1090:27;1080:2;;1131:1;1128;1121:12;1080:2;1168:6;1155:20;1190:65;1205:49;1247:6;1205:49;:::i;:::-;1190:65;:::i;:::-;1181:74;;1275:6;1268:5;1261:21;1311:4;1303:6;1299:17;1344:4;1337:5;1333:16;1379:3;1370:6;1365:3;1361:16;1358:25;1355:2;;;1396:1;1393;1386:12;1355:2;1406:41;1440:6;1435:3;1430;1406:41;:::i;:::-;1073:380;;;;;;;:::o;1493:1089::-;;1609:4;1597:9;1592:3;1588:19;1584:30;1581:2;;;1627:1;1624;1617:12;1581:2;1645:20;1660:4;1645:20;:::i;:::-;1636:29;;1743:1;1732:9;1728:17;1715:31;1766:18;1758:6;1755:30;1752:2;;;1798:1;1795;1788:12;1752:2;1833:59;1888:3;1879:6;1868:9;1864:22;1833:59;:::i;:::-;1826:4;1819:5;1815:16;1808:85;1675:229;1956:2;1989:49;2034:3;2025:6;2014:9;2010:22;1989:49;:::i;:::-;1982:4;1975:5;1971:16;1964:75;1914:136;2131:2;2120:9;2116:18;2103:32;2155:18;2147:6;2144:30;2141:2;;;2187:1;2184;2177:12;2141:2;2222:77;2295:3;2286:6;2275:9;2271:22;2222:77;:::i;:::-;2215:4;2208:5;2204:16;2197:103;2060:251;2392:2;2381:9;2377:18;2364:32;2416:18;2408:6;2405:30;2402:2;;;2448:1;2445;2438:12;2402:2;2483:77;2556:3;2547:6;2536:9;2532:22;2483:77;:::i;:::-;2476:4;2469:5;2465:16;2458:103;2321:251;1575:1007;;;;:::o;2619:987::-;;2736:4;2724:9;2719:3;2715:19;2711:30;2708:2;;;2754:1;2751;2744:12;2708:2;2772:20;2787:4;2772:20;:::i;:::-;2763:29;;2876:1;2865:9;2861:17;2848:31;2899:18;2891:6;2888:30;2885:2;;;2931:1;2928;2921:12;2885:2;2966:59;3021:3;3012:6;3001:9;2997:22;2966:59;:::i;:::-;2959:4;2952:5;2948:16;2941:85;2802:235;3122:2;3111:9;3107:18;3094:32;3146:18;3138:6;3135:30;3132:2;;;3178:1;3175;3168:12;3132:2;3213:59;3268:3;3259:6;3248:9;3244:22;3213:59;:::i;:::-;3206:4;3199:5;3195:16;3188:85;3047:237;3346:2;3379:49;3424:3;3415:6;3404:9;3400:22;3379:49;:::i;:::-;3372:4;3365:5;3361:16;3354:75;3294:146;3502:2;3535:49;3580:3;3571:6;3560:9;3556:22;3535:49;:::i;:::-;3528:4;3521:5;3517:16;3510:75;3450:146;2702:904;;;;:::o;3613:130::-;;3693:6;3680:20;3671:29;;3705:33;3732:5;3705:33;:::i;:::-;3665:78;;;;:::o;3750:134::-;;3834:6;3828:13;3819:22;;3846:33;3873:5;3846:33;:::i;:::-;3813:71;;;;:::o;3891:241::-;;3995:2;3983:9;3974:7;3970:23;3966:32;3963:2;;;4011:1;4008;4001:12;3963:2;4046:1;4063:53;4108:7;4099:6;4088:9;4084:22;4063:53;:::i;:::-;4053:63;;4025:97;3957:175;;;;:::o;4139:263::-;;4254:2;4242:9;4233:7;4229:23;4225:32;4222:2;;;4270:1;4267;4260:12;4222:2;4305:1;4322:64;4378:7;4369:6;4358:9;4354:22;4322:64;:::i;:::-;4312:74;;4284:108;4216:186;;;;:::o;4409:241::-;;4513:2;4501:9;4492:7;4488:23;4484:32;4481:2;;;4529:1;4526;4519:12;4481:2;4564:1;4581:53;4626:7;4617:6;4606:9;4602:22;4581:53;:::i;:::-;4571:63;;4543:97;4475:175;;;;:::o;4657:263::-;;4772:2;4760:9;4751:7;4747:23;4743:32;4740:2;;;4788:1;4785;4778:12;4740:2;4823:1;4840:64;4896:7;4887:6;4876:9;4872:22;4840:64;:::i;:::-;4830:74;;4802:108;4734:186;;;;:::o;4927:366::-;;;5048:2;5036:9;5027:7;5023:23;5019:32;5016:2;;;5064:1;5061;5054:12;5016:2;5099:1;5116:53;5161:7;5152:6;5141:9;5137:22;5116:53;:::i;:::-;5106:63;;5078:97;5206:2;5224:53;5269:7;5260:6;5249:9;5245:22;5224:53;:::i;:::-;5214:63;;5185:98;5010:283;;;;;:::o;5300:472::-;;;5431:2;5419:9;5410:7;5406:23;5402:32;5399:2;;;5447:1;5444;5437:12;5399:2;5482:1;5499:53;5544:7;5535:6;5524:9;5520:22;5499:53;:::i;:::-;5489:63;;5461:97;5617:2;5606:9;5602:18;5589:32;5641:18;5633:6;5630:30;5627:2;;;5673:1;5670;5663:12;5627:2;5693:63;5748:7;5739:6;5728:9;5724:22;5693:63;:::i;:::-;5683:73;;5568:194;5393:379;;;;;:::o;5779:701::-;;;;5936:2;5924:9;5915:7;5911:23;5907:32;5904:2;;;5952:1;5949;5942:12;5904:2;5987:1;6004:53;6049:7;6040:6;6029:9;6025:22;6004:53;:::i;:::-;5994:63;;5966:97;6122:2;6111:9;6107:18;6094:32;6146:18;6138:6;6135:30;6132:2;;;6178:1;6175;6168:12;6132:2;6198:63;6253:7;6244:6;6233:9;6229:22;6198:63;:::i;:::-;6188:73;;6073:194;6326:2;6315:9;6311:18;6298:32;6350:18;6342:6;6339:30;6336:2;;;6382:1;6379;6372:12;6336:2;6402:62;6456:7;6447:6;6436:9;6432:22;6402:62;:::i;:::-;6392:72;;6277:193;5898:582;;;;;:::o;6487:366::-;;;6608:2;6596:9;6587:7;6583:23;6579:32;6576:2;;;6624:1;6621;6614:12;6576:2;6659:1;6676:53;6721:7;6712:6;6701:9;6697:22;6676:53;:::i;:::-;6666:63;;6638:97;6766:2;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6745:98;6570:283;;;;;:::o;6860:347::-;;6974:2;6962:9;6953:7;6949:23;6945:32;6942:2;;;6990:1;6987;6980:12;6942:2;7053:1;7042:9;7038:17;7025:31;7076:18;7068:6;7065:30;7062:2;;;7108:1;7105;7098:12;7062:2;7128:63;7183:7;7174:6;7163:9;7159:22;7128:63;:::i;:::-;7118:73;;7004:193;6936:271;;;;:::o;7214:646::-;;;7389:2;7377:9;7368:7;7364:23;7360:32;7357:2;;;7405:1;7402;7395:12;7357:2;7468:1;7457:9;7453:17;7440:31;7491:18;7483:6;7480:30;7477:2;;;7523:1;7520;7513:12;7477:2;7543:80;7615:7;7606:6;7595:9;7591:22;7543:80;:::i;:::-;7533:90;;7419:210;7688:2;7677:9;7673:18;7660:32;7712:18;7704:6;7701:30;7698:2;;;7744:1;7741;7734:12;7698:2;7764:80;7836:7;7827:6;7816:9;7812:22;7764:80;:::i;:::-;7754:90;;7639:211;7351:509;;;;;:::o;7867:241::-;;7971:2;7959:9;7950:7;7946:23;7942:32;7939:2;;;7987:1;7984;7977:12;7939:2;8022:1;8039:53;8084:7;8075:6;8064:9;8060:22;8039:53;:::i;:::-;8029:63;;8001:97;7933:175;;;;:::o;8115:263::-;;8230:2;8218:9;8209:7;8205:23;8201:32;8198:2;;;8246:1;8243;8236:12;8198:2;8281:1;8298:64;8354:7;8345:6;8334:9;8330:22;8298:64;:::i;:::-;8288:74;;8260:108;8192:186;;;;:::o;8385:366::-;;;8506:2;8494:9;8485:7;8481:23;8477:32;8474:2;;;8522:1;8519;8512:12;8474:2;8557:1;8574:53;8619:7;8610:6;8599:9;8595:22;8574:53;:::i;:::-;8564:63;;8536:97;8664:2;8682:53;8727:7;8718:6;8707:9;8703:22;8682:53;:::i;:::-;8672:63;;8643:98;8468:283;;;;;:::o;8758:142::-;8849:45;8888:5;8849:45;:::i;:::-;8844:3;8837:58;8831:69;;:::o;8907:113::-;8990:24;9008:5;8990:24;:::i;:::-;8985:3;8978:37;8972:48;;:::o;9027:104::-;9104:21;9119:5;9104:21;:::i;:::-;9099:3;9092:34;9086:45;;:::o;9138:113::-;9221:24;9239:5;9221:24;:::i;:::-;9216:3;9209:37;9203:48;;:::o;9258:154::-;9355:51;9400:5;9355:51;:::i;:::-;9350:3;9343:64;9337:75;;:::o;9419:142::-;9510:45;9549:5;9510:45;:::i;:::-;9505:3;9498:58;9492:69;;:::o;9568:327::-;;9670:39;9703:5;9670:39;:::i;:::-;9721:61;9775:6;9770:3;9721:61;:::i;:::-;9714:68;;9787:52;9832:6;9827:3;9820:4;9813:5;9809:16;9787:52;:::i;:::-;9860:29;9882:6;9860:29;:::i;:::-;9855:3;9851:39;9844:46;;9650:245;;;;;:::o;9902:347::-;;10014:39;10047:5;10014:39;:::i;:::-;10065:71;10129:6;10124:3;10065:71;:::i;:::-;10058:78;;10141:52;10186:6;10181:3;10174:4;10167:5;10163:16;10141:52;:::i;:::-;10214:29;10236:6;10214:29;:::i;:::-;10209:3;10205:39;10198:46;;9994:255;;;;;:::o;10281:793::-;;10390:5;10384:12;10424:1;10413:9;10409:17;10437:1;10432:238;;;;10681:1;10676:392;;;;10402:666;;10432:238;10510:4;10506:1;10495:9;10491:17;10487:28;10529:61;10583:6;10578:3;10529:61;:::i;:::-;10522:68;;10628:4;10624:9;10613;10609:25;10604:3;10597:38;10658:4;10653:3;10649:14;10642:21;;10439:231;10432:238;;10676:392;10745:1;10734:9;10730:17;10761:61;10815:6;10810:3;10761:61;:::i;:::-;10754:68;;10844:38;10876:5;10844:38;:::i;:::-;10898:1;10906:130;10920:6;10917:1;10914:13;10906:130;;;10985:7;10979:14;10975:1;10970:3;10966:11;10959:35;11026:1;11017:7;11013:15;11002:26;;10942:4;10939:1;10935:12;10930:17;;10906:130;;;11059:1;11054:3;11050:11;11043:18;;10683:385;;;10402:666;;10360:714;;;;;:::o;11107:884::-;;11244:5;11238:12;11278:1;11267:9;11263:17;11291:1;11286:268;;;;11565:1;11560:425;;;;11256:729;;11286:268;11364:4;11360:1;11349:9;11345:17;11341:28;11383:89;11465:6;11460:3;11383:89;:::i;:::-;11376:96;;11510:4;11506:9;11495;11491:25;11486:3;11479:38;11540:6;11535:3;11531:16;11524:23;;11293:261;11286:268;;11560:425;11629:1;11618:9;11614:17;11645:89;11727:6;11722:3;11645:89;:::i;:::-;11638:96;;11756:38;11788:5;11756:38;:::i;:::-;11810:1;11818:130;11832:6;11829:1;11826:13;11818:130;;;11897:7;11891:14;11887:1;11882:3;11878:11;11871:35;11938:1;11929:7;11925:15;11914:26;;11854:4;11851:1;11847:12;11842:17;;11818:130;;;11971:6;11966:3;11962:16;11955:23;;11567:418;;;11256:729;;11214:777;;;;;:::o;12000:371::-;;12160:67;12224:2;12219:3;12160:67;:::i;:::-;12153:74;;12260:34;12256:1;12251:3;12247:11;12240:55;12329:4;12324:2;12319:3;12315:12;12308:26;12362:2;12357:3;12353:12;12346:19;;12146:225;;;:::o;12380:384::-;;12540:67;12604:2;12599:3;12540:67;:::i;:::-;12533:74;;12640:34;12636:1;12631:3;12627:11;12620:55;12709:17;12704:2;12699:3;12695:12;12688:39;12755:2;12750:3;12746:12;12739:19;;12526:238;;;:::o;12773:392::-;;12933:67;12997:2;12992:3;12933:67;:::i;:::-;12926:74;;13033:34;13029:1;13024:3;13020:11;13013:55;13102:25;13097:2;13092:3;13088:12;13081:47;13156:2;13151:3;13147:12;13140:19;;12919:246;;;:::o;13174:375::-;;13334:67;13398:2;13393:3;13334:67;:::i;:::-;13327:74;;13434:34;13430:1;13425:3;13421:11;13414:55;13503:8;13498:2;13493:3;13489:12;13482:30;13540:2;13535:3;13531:12;13524:19;;13320:229;;;:::o;13558:383::-;;13718:67;13782:2;13777:3;13718:67;:::i;:::-;13711:74;;13818:34;13814:1;13809:3;13805:11;13798:55;13887:16;13882:2;13877:3;13873:12;13866:38;13932:2;13927:3;13923:12;13916:19;;13704:237;;;:::o;13950:311::-;;14110:67;14174:2;14169:3;14110:67;:::i;:::-;14103:74;;14210:13;14206:1;14201:3;14197:11;14190:34;14252:2;14247:3;14243:12;14236:19;;14096:165;;;:::o;14270:385::-;;14430:67;14494:2;14489:3;14430:67;:::i;:::-;14423:74;;14530:34;14526:1;14521:3;14517:11;14510:55;14599:18;14594:2;14589:3;14585:12;14578:40;14646:2;14641:3;14637:12;14630:19;;14416:239;;;:::o;14664:313::-;;14824:67;14888:2;14883:3;14824:67;:::i;:::-;14817:74;;14924:15;14920:1;14915:3;14911:11;14904:36;14968:2;14963:3;14959:12;14952:19;;14810:167;;;:::o;14986:332::-;;15146:67;15210:2;15205:3;15146:67;:::i;:::-;15139:74;;15246:34;15242:1;15237:3;15233:11;15226:55;15309:2;15304:3;15300:12;15293:19;;15132:186;;;:::o;15327:383::-;;15487:67;15551:2;15546:3;15487:67;:::i;:::-;15480:74;;15587:34;15583:1;15578:3;15574:11;15567:55;15656:16;15651:2;15646:3;15642:12;15635:38;15701:2;15696:3;15692:12;15685:19;;15473:237;;;:::o;15719:298::-;;15897:84;15979:1;15974:3;15897:84;:::i;:::-;15890:91;;16009:1;16004:3;16000:11;15993:18;;15883:134;;;:::o;16026:317::-;;16186:67;16250:2;16245:3;16186:67;:::i;:::-;16179:74;;16286:19;16282:1;16277:3;16273:11;16266:40;16334:2;16329:3;16325:12;16318:19;;16172:171;;;:::o;16352:384::-;;16512:67;16576:2;16571:3;16512:67;:::i;:::-;16505:74;;16612:34;16608:1;16603:3;16599:11;16592:55;16681:17;16676:2;16671:3;16667:12;16660:39;16727:2;16722:3;16718:12;16711:19;;16498:238;;;:::o;16805:1115::-;;16960:4;16955:3;16951:14;17043:4;17036:5;17032:16;17026:23;17095:3;17089:4;17085:14;17078:4;17073:3;17069:14;17062:38;17115:73;17183:4;17169:12;17115:73;:::i;:::-;17107:81;;16980:220;17275:4;17268:5;17264:16;17258:23;17287:63;17344:4;17339:3;17335:14;17321:12;17287:63;:::i;:::-;17210:146;17432:4;17425:5;17421:16;17415:23;17484:3;17478:4;17474:14;17467:4;17462:3;17458:14;17451:38;17504:109;17608:4;17594:12;17504:109;:::i;:::-;17496:117;;17366:259;17701:4;17694:5;17690:16;17684:23;17753:3;17747:4;17743:14;17736:4;17731:3;17727:14;17720:38;17773:109;17877:4;17863:12;17773:109;:::i;:::-;17765:117;;17635:259;17911:4;17904:11;;16933:987;;;;;:::o;17988:1168::-;;18140:4;18135:3;18131:14;18167:1;18235:4;18228:5;18224:16;18286:3;18280:4;18276:14;18269:4;18264:3;18260:14;18253:38;18306:70;18371:4;18357:12;18306:70;:::i;:::-;18298:78;;18178:210;18450:4;18443:5;18439:16;18433:23;18420:36;;18482:55;18527:9;18482:55;:::i;:::-;18543:63;18600:4;18595:3;18591:14;18577:12;18543:63;:::i;:::-;18398:214;18682:4;18675:5;18671:16;18733:3;18727:4;18723:14;18716:4;18711:3;18707:14;18700:38;18753:106;18854:4;18840:12;18753:106;:::i;:::-;18745:114;;18622:249;18941:4;18934:5;18930:16;18992:3;18986:4;18982:14;18975:4;18970:3;18966:14;18959:38;19012:106;19113:4;19099:12;19012:106;:::i;:::-;19004:114;;18881:249;19147:4;19140:11;;18113:1043;;;;;;:::o;19220:988::-;;19367:4;19362:3;19358:14;19456:4;19449:5;19445:16;19439:23;19508:3;19502:4;19498:14;19491:4;19486:3;19482:14;19475:38;19528:73;19596:4;19582:12;19528:73;:::i;:::-;19520:81;;19387:226;19693:4;19686:5;19682:16;19676:23;19745:3;19739:4;19735:14;19728:4;19723:3;19719:14;19712:38;19765:73;19833:4;19819:12;19765:73;:::i;:::-;19757:81;;19623:227;19935:4;19928:5;19924:16;19918:23;19947:63;20004:4;19999:3;19995:14;19981:12;19947:63;:::i;:::-;19860:156;20101:4;20094:5;20090:16;20084:23;20113:63;20170:4;20165:3;20161:14;20147:12;20113:63;:::i;:::-;20026:156;20199:4;20192:11;;19340:868;;;;;:::o;20272:1119::-;;20416:4;20411:3;20407:14;20443:1;20517:4;20510:5;20506:16;20568:3;20562:4;20558:14;20551:4;20546:3;20542:14;20535:38;20588:70;20653:4;20639:12;20588:70;:::i;:::-;20580:78;;20454:216;20744:4;20737:5;20733:16;20795:3;20789:4;20785:14;20778:4;20773:3;20769:14;20762:38;20815:70;20880:4;20866:12;20815:70;:::i;:::-;20807:78;;20680:217;20969:4;20962:5;20958:16;20952:23;20939:36;;21001:55;21046:9;21001:55;:::i;:::-;21062:63;21119:4;21114:3;21110:14;21096:12;21062:63;:::i;:::-;20907:224;21203:4;21196:5;21192:16;21186:23;21173:36;;21235:55;21280:9;21235:55;:::i;:::-;21296:63;21353:4;21348:3;21344:14;21330:12;21296:63;:::i;:::-;21141:224;21382:4;21375:11;;20389:1002;;;;;;:::o;21398:103::-;21471:24;21489:5;21471:24;:::i;:::-;21466:3;21459:37;21453:48;;:::o;21508:113::-;21591:24;21609:5;21591:24;:::i;:::-;21586:3;21579:37;21573:48;;:::o;21628:269::-;;21780:92;21868:3;21859:6;21780:92;:::i;:::-;21773:99;;21889:3;21882:10;;21761:136;;;;:::o;21904:381::-;;22112:148;22256:3;22112:148;:::i;:::-;22105:155;;22277:3;22270:10;;22093:192;;;:::o;22292:222::-;;22419:2;22408:9;22404:18;22396:26;;22433:71;22501:1;22490:9;22486:17;22477:6;22433:71;:::i;:::-;22390:124;;;;:::o;22521:349::-;;22684:2;22673:9;22669:18;22661:26;;22698:79;22774:1;22763:9;22759:17;22750:6;22698:79;:::i;:::-;22788:72;22856:2;22845:9;22841:18;22832:6;22788:72;:::i;:::-;22655:215;;;;;:::o;22877:210::-;;22998:2;22987:9;22983:18;22975:26;;23012:65;23074:1;23063:9;23059:17;23050:6;23012:65;:::i;:::-;22969:118;;;;:::o;23094:321::-;;23243:2;23232:9;23228:18;23220:26;;23257:65;23319:1;23308:9;23304:17;23295:6;23257:65;:::i;:::-;23333:72;23401:2;23390:9;23386:18;23377:6;23333:72;:::i;:::-;23214:201;;;;;:::o;23422:222::-;;23549:2;23538:9;23534:18;23526:26;;23563:71;23631:1;23620:9;23616:17;23607:6;23563:71;:::i;:::-;23520:124;;;;:::o;23651:250::-;;23792:2;23781:9;23777:18;23769:26;;23806:85;23888:1;23877:9;23873:17;23864:6;23806:85;:::i;:::-;23763:138;;;;:::o;23908:636::-;;24139:2;24128:9;24124:18;24116:26;;24153:79;24229:1;24218:9;24214:17;24205:6;24153:79;:::i;:::-;24280:9;24274:4;24270:20;24265:2;24254:9;24250:18;24243:48;24305:78;24378:4;24369:6;24305:78;:::i;:::-;24297:86;;24431:9;24425:4;24421:20;24416:2;24405:9;24401:18;24394:48;24456:78;24529:4;24520:6;24456:78;:::i;:::-;24448:86;;24110:434;;;;;;:::o;24551:310::-;;24698:2;24687:9;24683:18;24675:26;;24748:9;24742:4;24738:20;24734:1;24723:9;24719:17;24712:47;24773:78;24846:4;24837:6;24773:78;:::i;:::-;24765:86;;24669:192;;;;:::o;24868:416::-;;25068:2;25057:9;25053:18;25045:26;;25118:9;25112:4;25108:20;25104:1;25093:9;25089:17;25082:47;25143:131;25269:4;25143:131;:::i;:::-;25135:139;;25039:245;;;:::o;25291:416::-;;25491:2;25480:9;25476:18;25468:26;;25541:9;25535:4;25531:20;25527:1;25516:9;25512:17;25505:47;25566:131;25692:4;25566:131;:::i;:::-;25558:139;;25462:245;;;:::o;25714:416::-;;25914:2;25903:9;25899:18;25891:26;;25964:9;25958:4;25954:20;25950:1;25939:9;25935:17;25928:47;25989:131;26115:4;25989:131;:::i;:::-;25981:139;;25885:245;;;:::o;26137:416::-;;26337:2;26326:9;26322:18;26314:26;;26387:9;26381:4;26377:20;26373:1;26362:9;26358:17;26351:47;26412:131;26538:4;26412:131;:::i;:::-;26404:139;;26308:245;;;:::o;26560:416::-;;26760:2;26749:9;26745:18;26737:26;;26810:9;26804:4;26800:20;26796:1;26785:9;26781:17;26774:47;26835:131;26961:4;26835:131;:::i;:::-;26827:139;;26731:245;;;:::o;26983:416::-;;27183:2;27172:9;27168:18;27160:26;;27233:9;27227:4;27223:20;27219:1;27208:9;27204:17;27197:47;27258:131;27384:4;27258:131;:::i;:::-;27250:139;;27154:245;;;:::o;27406:416::-;;27606:2;27595:9;27591:18;27583:26;;27656:9;27650:4;27646:20;27642:1;27631:9;27627:17;27620:47;27681:131;27807:4;27681:131;:::i;:::-;27673:139;;27577:245;;;:::o;27829:416::-;;28029:2;28018:9;28014:18;28006:26;;28079:9;28073:4;28069:20;28065:1;28054:9;28050:17;28043:47;28104:131;28230:4;28104:131;:::i;:::-;28096:139;;28000:245;;;:::o;28252:416::-;;28452:2;28441:9;28437:18;28429:26;;28502:9;28496:4;28492:20;28488:1;28477:9;28473:17;28466:47;28527:131;28653:4;28527:131;:::i;:::-;28519:139;;28423:245;;;:::o;28675:416::-;;28875:2;28864:9;28860:18;28852:26;;28925:9;28919:4;28915:20;28911:1;28900:9;28896:17;28889:47;28950:131;29076:4;28950:131;:::i;:::-;28942:139;;28846:245;;;:::o;29098:416::-;;29298:2;29287:9;29283:18;29275:26;;29348:9;29342:4;29338:20;29334:1;29323:9;29319:17;29312:47;29373:131;29499:4;29373:131;:::i;:::-;29365:139;;29269:245;;;:::o;29521:416::-;;29721:2;29710:9;29706:18;29698:26;;29771:9;29765:4;29761:20;29757:1;29746:9;29742:17;29735:47;29796:131;29922:4;29796:131;:::i;:::-;29788:139;;29692:245;;;:::o;29944:378::-;;30125:2;30114:9;30110:18;30102:26;;30175:9;30169:4;30165:20;30161:1;30150:9;30146:17;30139:47;30200:112;30307:4;30298:6;30200:112;:::i;:::-;30192:120;;30096:226;;;;:::o;30329:645::-;;30592:2;30581:9;30577:18;30569:26;;30642:9;30636:4;30632:20;30628:1;30617:9;30613:17;30606:47;30667:112;30774:4;30765:6;30667:112;:::i;:::-;30659:120;;30827:9;30821:4;30817:20;30812:2;30801:9;30797:18;30790:48;30852:112;30959:4;30950:6;30852:112;:::i;:::-;30844:120;;30563:411;;;;;:::o;30981:732::-;;31260:2;31249:9;31245:18;31237:26;;31310:9;31304:4;31300:20;31296:1;31285:9;31281:17;31274:47;31335:109;31439:4;31430:6;31335:109;:::i;:::-;31327:117;;31492:9;31486:4;31482:20;31477:2;31466:9;31462:18;31455:48;31517:109;31621:4;31612:6;31517:109;:::i;:::-;31509:117;;31637:66;31699:2;31688:9;31684:18;31675:6;31637:66;:::i;:::-;31231:482;;;;;;:::o;31720:222::-;;31847:2;31836:9;31832:18;31824:26;;31861:71;31929:1;31918:9;31914:17;31905:6;31861:71;:::i;:::-;31818:124;;;;:::o;31949:256::-;;32011:2;32005:9;31995:19;;32049:4;32041:6;32037:17;32148:6;32136:10;32133:22;32112:18;32100:10;32097:34;32094:62;32091:2;;;32169:1;32166;32159:12;32091:2;32189:10;32185:2;32178:22;31989:216;;;;:::o;32212:321::-;;32355:18;32347:6;32344:30;32341:2;;;32387:1;32384;32377:12;32341:2;32454:4;32450:9;32443:4;32435:6;32431:17;32427:33;32419:41;;32518:4;32512;32508:15;32500:23;;32278:255;;;:::o;32540:322::-;;32684:18;32676:6;32673:30;32670:2;;;32716:1;32713;32706:12;32670:2;32783:4;32779:9;32772:4;32764:6;32760:17;32756:33;32748:41;;32847:4;32841;32837:15;32829:23;;32607:255;;;:::o;32869:158::-;;32937:3;32929:11;;32974:3;32971:1;32964:14;33006:4;33003:1;32993:18;32985:26;;32923:104;;;:::o;33034:122::-;;33128:5;33122:12;33112:22;;33093:63;;;:::o;33164:153::-;;33269:6;33264:3;33257:19;33306:4;33301:3;33297:14;33282:29;;33250:67;;;;:::o;33326:163::-;;33441:6;33436:3;33429:19;33478:4;33473:3;33469:14;33454:29;;33422:67;;;;:::o;33498:145::-;;33634:3;33619:18;;33612:31;;;;:::o;33651:85::-;;33726:5;33715:16;;33709:27;;;:::o;33743:91::-;;33805:24;33823:5;33805:24;:::i;:::-;33794:35;;33788:46;;;:::o;33841:85::-;;33914:5;33907:13;33900:21;33889:32;;33883:43;;;:::o;33933:72::-;;33995:5;33984:16;;33978:27;;;:::o;34012:121::-;;34085:42;34078:5;34074:54;34063:65;;34057:76;;;:::o;34140:72::-;;34202:5;34191:16;;34185:27;;;:::o;34219:129::-;;34306:37;34337:5;34306:37;:::i;:::-;34293:50;;34287:61;;;:::o;34355:149::-;;34448:51;34493:5;34448:51;:::i;:::-;34435:64;;34429:75;;;:::o;34511:122::-;;34604:24;34622:5;34604:24;:::i;:::-;34591:37;;34585:48;;;:::o;34640:116::-;;34727:24;34745:5;34727:24;:::i;:::-;34714:37;;34708:48;;;:::o;34763:121::-;;34842:37;34873:5;34842:37;:::i;:::-;34829:50;;34823:61;;;:::o;34891:108::-;;34970:24;34988:5;34970:24;:::i;:::-;34957:37;;34951:48;;;:::o;35007:145::-;35088:6;35083:3;35078;35065:30;35144:1;35135:6;35130:3;35126:16;35119:27;35058:94;;;:::o;35161:268::-;35226:1;35233:101;35247:6;35244:1;35241:13;35233:101;;;35323:1;35318:3;35314:11;35308:18;35304:1;35299:3;35295:11;35288:39;35269:2;35266:1;35262:10;35257:15;;35233:101;;;35349:6;35346:1;35343:13;35340:2;;;35414:1;35405:6;35400:3;35396:16;35389:27;35340:2;35210:219;;;;:::o;35437:161::-;;35527:66;35558:34;35581:10;35558:34;:::i;:::-;35527:66;:::i;:::-;35518:75;;35512:86;;;:::o;35605:97::-;;35693:2;35689:7;35684:2;35677:5;35673:14;35669:28;35659:38;;35653:49;;;:::o;35710:102::-;;35796:5;35793:1;35789:13;35767:35;;35761:51;;;:::o;35820:117::-;35889:24;35907:5;35889:24;:::i;:::-;35882:5;35879:35;35869:2;;35928:1;35925;35918:12;35869:2;35863:74;:::o;35944:117::-;36013:24;36031:5;36013:24;:::i;:::-;36006:5;36003:35;35993:2;;36052:1;36049;36042:12;35993:2;35987:74;:::o;36068:117::-;36137:24;36155:5;36137:24;:::i;:::-;36130:5;36127:35;36117:2;;36176:1;36173;36166:12;36117:2;36111:74;:::o",
  "source": "/// Based on https://solidity.readthedocs.io/en/develop/natspec-format.html\n\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Heroes.sol\";\nimport \"./ProvableAPI.sol\";\nimport \"../../node_modules/@openzeppelin/upgrades-core/contracts/Initializable.sol\";\nimport \"../../node_modules/@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"../../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n\n//\"SPDX-License-Identifier: UNLICENSED\"\n\n/// @title A arena for a 1 on 1 battle\n/// @author Jeffrey Lo-A-Foe\n/// @notice You can use this contract for a simple one on one battle \n/// @dev All function calls are currently implemented without side effects\ncontract HeroesMatch is usingProvable, Initializable, AccessControl, Ownable{\n\n    Heroes public deployed;\n    string  public temp;\n    uint256 public priceOfUrl;\n    string public season;\n\n    bytes32 public constant CHAMPION_ROLE = keccak256(\"CHAMPION\");\n    bytes32 public constant LOSER_ROLE = keccak256(\"LOSER\");\n\n    modifier minAmount(uint _amount){ require(msg.value >= _amount, \"MORE STAKE NEEDED\"); _;}\n\n    struct Match {\n        Heroes.HeroesClass challenger;\n        Heroes.HeroesClass opponent;\n    }\n\n    event RoundWinner(Heroes.HeroesClass challenger, Heroes.HeroesClass opponent, bool result) ;\n    event ReceivedItem(address player, uint item);\n\n    mapping(address => Match) public ownerToMatch;\n\n    constructor() public Ownable() payable{}\n\n    function __callback(bytes32 /* myid prevent warning*/ , string memory result ) override public {\n        if (msg.sender != provable_cbAddress()) revert();\n        temp = result;\n    }\n\n    function initialize(string memory _season) public initializer {\n        season = _season;\n    }\n\n    function setSeason(string memory _season) public {\n        season = _season;\n    }\n\n    function destroyHero() public onlyOwner{\n        deployed.destroy();\n        deployed = Heroes(address(0));\n    }\n\n    function deployHero() public onlyOwner returns (Heroes) {\n        deployed = new Heroes{salt: 0x00}();\n        return deployed;\n    }\n\n    /// @notice Weather for some fight variation\n    /// @dev extend\n    function getTemp() public payable minAmount(0.02 ether){\n        priceOfUrl = provable_getPrice(\"URL\");\n        require (address(this).balance >= priceOfUrl,\n                \"please add some ETH to cover for the query fee\");\n        provable_query(\"URL\",\n                \"json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp\");\n    }\n\n    function getReward(uint item) public{\n        emit ReceivedItem(msg.sender, item);\n    }\n\n    /// @notice set the fighting arena and say who battles who\n    /// @dev extend\n    /// @param _opponent contains of name skill damage\n    /// @param _challenger contains of name skill damage\n    /// @return _challenger give back what character is made\n    //Set the fight arena\n    function initFight(Heroes.HeroesClass memory _challenger, Heroes.HeroesClass memory _opponent) public returns (Heroes.HeroesClass memory) {\n        ownerToMatch[msg.sender] = Match(_challenger,_opponent);\n        return _challenger;\n    }\n\n    /// @notice calculate the winning state\n    /// @dev extend\n    /// @param randomNumberChallenger The numbers are random generated from the dApp\n    /// @param randomNumberOpponent The numbers are random generated from the dApp\n    /// @return did challenger win and how much dmg is done\n    //Start the fight and determine damage.\n    function beginFight(uint randomNumberChallenger, uint randomNumberOpponent) public returns (bool, uint){\n        //No challenger or opponent\n        require(keccak256(abi.encodePacked(ownerToMatch[msg.sender].challenger.name)) != keccak256(abi.encodePacked(\"\")), \"No challenger\");\n        require(keccak256(abi.encodePacked(ownerToMatch[msg.sender].opponent.name)) != keccak256(abi.encodePacked(\"\")), \"No opponent\");\n\n        bool winner = didChallengerWin(randomNumberChallenger, randomNumberOpponent);\n\n        //Give result and the amount of damage\n        if(winner) {\n            return (true, ownerToMatch[msg.sender].challenger.skill_1.min_skill_damage);\n        }\n        else {\n            return (false, ownerToMatch[msg.sender].opponent.skill_2.min_skill_damage);\n        }\n    }\n    /// @notice announce the winner in the event log\n    /// @dev extend\n    /// @param randomNumberChallenger The numbers are random generated from the dApp\n    /// @param randomNumberOpponent The numbers are random generated from the dApp\n    /// @return did challenger win\n    //Determine who wins the fight\n    function didChallengerWin(uint randomNumberChallenger, uint randomNumberOpponent) public returns(bool) {\n        if(randomNumberChallenger > randomNumberOpponent) {\n            emit RoundWinner(ownerToMatch[msg.sender].challenger, ownerToMatch[msg.sender].opponent, true);\n            _setupRole(CHAMPION_ROLE, msg.sender);\n            return true;\n        }\n        else {\n            emit RoundWinner(ownerToMatch[msg.sender].challenger, ownerToMatch[msg.sender].opponent, false);\n            _setupRole(LOSER_ROLE, msg.sender);\n            return false;\n        }\n    }\n\n    function showYourPresence() public view returns (string memory) {\n        require(hasRole(CHAMPION_ROLE,msg.sender), \"You're not the champion and cannot intimidate the arena\");\n        return \"BOW TO YOUR CHAMPION HOEHA!\";\n    }\n\n}",
  "sourcePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Match.sol",
  "ast": {
    "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Match.sol",
    "exportedSymbols": {
      "HeroesMatch": [
        523
      ]
    },
    "id": 524,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 133,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "77:23:2"
      },
      {
        "id": 134,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:33:2"
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Heroes.sol",
        "file": "./Heroes.sol",
        "id": 135,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 132,
        "src": "136:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/ProvableAPI.sol",
        "file": "./ProvableAPI.sol",
        "id": 136,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 6999,
        "src": "159:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "file": "../../node_modules/@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "id": 137,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 8180,
        "src": "187:84:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "../../node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "id": 138,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 7406,
        "src": "272:77:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 139,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 7515,
        "src": "350:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 141,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6998,
              "src": "701:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6998",
                "typeString": "contract usingProvable"
              }
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "701:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 143,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8179,
              "src": "716:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8179",
                "typeString": "contract Initializable"
              }
            },
            "id": 144,
            "nodeType": "InheritanceSpecifier",
            "src": "716:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 145,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7405,
              "src": "731:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$7405",
                "typeString": "contract AccessControl"
              }
            },
            "id": 146,
            "nodeType": "InheritanceSpecifier",
            "src": "731:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 147,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7514,
              "src": "746:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7514",
                "typeString": "contract Ownable"
              }
            },
            "id": 148,
            "nodeType": "InheritanceSpecifier",
            "src": "746:7:2"
          }
        ],
        "contractDependencies": [
          131,
          6998,
          7122,
          7405,
          7514,
          8179
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "464:213:2",
          "text": "@title A arena for a 1 on 1 battle\n @author Jeffrey Lo-A-Foe\n @notice You can use this contract for a simple one on one battle \n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 523,
        "linearizedBaseContracts": [
          523,
          7514,
          7405,
          7122,
          8179,
          6998
        ],
        "name": "HeroesMatch",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f905c15a",
            "id": 150,
            "mutability": "mutable",
            "name": "deployed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "760:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Heroes_$131",
              "typeString": "contract Heroes"
            },
            "typeName": {
              "contractScope": null,
              "id": 149,
              "name": "Heroes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 131,
              "src": "760:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Heroes_$131",
                "typeString": "contract Heroes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "673402e5",
            "id": 152,
            "mutability": "mutable",
            "name": "temp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "788:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "788:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "43d3b1be",
            "id": 154,
            "mutability": "mutable",
            "name": "priceOfUrl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "813:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 153,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "813:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c50b0fb0",
            "id": 156,
            "mutability": "mutable",
            "name": "season",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "844:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 155,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "844:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "67d8e054",
            "id": 161,
            "mutability": "constant",
            "name": "CHAMPION_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "871:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 157,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "871:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4348414d50494f4e",
                  "id": 159,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "921:10:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d5573",
                    "typeString": "literal_string \"CHAMPION\""
                  },
                  "value": "CHAMPION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d5573",
                    "typeString": "literal_string \"CHAMPION\""
                  }
                ],
                "id": 158,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "911:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 160,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "911:21:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "38bb0623",
            "id": 166,
            "mutability": "constant",
            "name": "LOSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "938:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 162,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "938:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4c4f534552",
                  "id": 164,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "985:7:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a367",
                    "typeString": "literal_string \"LOSER\""
                  },
                  "value": "LOSER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a367",
                    "typeString": "literal_string \"LOSER\""
                  }
                ],
                "id": 163,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "975:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 165,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "975:18:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1032:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1042:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1042:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "1055:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1042:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d4f5245205354414b45204e4545444544",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1773f279ac56432ab72bc9fbc0bacf41ebb67421513b226ddb68f482fdc05b7",
                          "typeString": "literal_string \"MORE STAKE NEEDED\""
                        },
                        "value": "MORE STAKE NEEDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1773f279ac56432ab72bc9fbc0bacf41ebb67421513b226ddb68f482fdc05b7",
                          "typeString": "literal_string \"MORE STAKE NEEDED\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1034:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:50:2"
                },
                {
                  "id": 178,
                  "nodeType": "PlaceholderStatement",
                  "src": "1086:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 180,
            "name": "minAmount",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 180,
                  "src": "1019:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1018:14:2"
            },
            "src": "1000:89:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "HeroesMatch.Match",
            "id": 185,
            "members": [
              {
                "constant": false,
                "id": 182,
                "mutability": "mutable",
                "name": "challenger",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 185,
                "src": "1118:29:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                  "typeString": "struct Heroes.HeroesClass"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 181,
                  "name": "Heroes.HeroesClass",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 67,
                  "src": "1118:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "mutability": "mutable",
                "name": "opponent",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 185,
                "src": "1157:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                  "typeString": "struct Heroes.HeroesClass"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 183,
                  "name": "Heroes.HeroesClass",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 67,
                  "src": "1157:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Match",
            "nodeType": "StructDefinition",
            "scope": 523,
            "src": "1095:96:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 193,
            "name": "RoundWinner",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1215:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 186,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "1215:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "opponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1246:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 188,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "1246:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1275:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1214:73:2"
            },
            "src": "1197:92:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 199,
            "name": "ReceivedItem",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "1313:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "item",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "1329:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1312:27:2"
            },
            "src": "1294:46:2"
          },
          {
            "constant": false,
            "functionSelector": "ae025c0c",
            "id": 203,
            "mutability": "mutable",
            "name": "ownerToMatch",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "1346:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
              "typeString": "mapping(address => struct HeroesMatch.Match)"
            },
            "typeName": {
              "id": 202,
              "keyType": {
                "id": 200,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1354:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1346:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                "typeString": "mapping(address => struct HeroesMatch.Match)"
              },
              "valueType": {
                "contractScope": null,
                "id": 201,
                "name": "Match",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 185,
                "src": "1365:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Match_$185_storage_ptr",
                  "typeString": "struct HeroesMatch.Match"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1436:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 209,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 206,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 205,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7514,
                  "src": "1419:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$7514_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1419:9:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1409:2:2"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:2"
            },
            "scope": 523,
            "src": "1398:40:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1630
            ],
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "1539:88:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1553:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1553:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 219,
                        "name": "provable_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4752,
                        "src": "1567:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1567:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1553:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 225,
                  "nodeType": "IfStatement",
                  "src": "1549:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 222,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "1589:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1589:8:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 224,
                    "nodeType": "ExpressionStatement",
                    "src": "1589:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1607:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "1614:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1607:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:13:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1523:8:2"
            },
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "1464:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "1500:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1463:59:2"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:2"
            },
            "scope": 523,
            "src": "1444:183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "1695:33:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1705:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "_season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1714:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1705:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:16:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f62d1888",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 236,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 235,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8152,
                  "src": "1683:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1683:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_season",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 243,
                  "src": "1653:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1652:23:2"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:0:2"
            },
            "scope": 523,
            "src": "1633:95:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "1783:33:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1793:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 249,
                      "name": "_season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "1802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1793:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:16:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2d1e7f86",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSeason",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_season",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 253,
                  "src": "1753:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1752:23:2"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:2"
            },
            "scope": 523,
            "src": "1734:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "1861:74:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 258,
                        "name": "deployed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1871:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Heroes_$131",
                          "typeString": "contract Heroes"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7041,
                      "src": "1871:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1871:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1899:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1925:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1917:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 265,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1917:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1917:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 264,
                        "name": "Heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1910:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Heroes_$131_$",
                          "typeString": "type(contract Heroes)"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1910:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "src": "1899:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:29:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "897822b1",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7463,
                  "src": "1852:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1852:9:2"
              }
            ],
            "name": "destroyHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:2:2"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:2"
            },
            "scope": 523,
            "src": "1822:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "1997:77:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2007:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2018:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Heroes_$131_$",
                            "typeString": "function () returns (contract Heroes)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 281,
                            "name": "Heroes",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 131,
                            "src": "2022:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Heroes_$131",
                              "typeString": "contract Heroes"
                            }
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "salt"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783030",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2035:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "src": "2018:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Heroes_$131_$salt",
                          "typeString": "function () returns (contract Heroes)"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "src": "2007:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2007:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 288,
                    "name": "deployed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "2059:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 289,
                  "nodeType": "Return",
                  "src": "2052:15:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c27567c9",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 275,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7463,
                  "src": "1970:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1970:9:2"
              }
            ],
            "name": "deployHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1960:2:2"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 291,
                  "src": "1989:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Heroes_$131",
                    "typeString": "contract Heroes"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 277,
                    "name": "Heroes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 131,
                    "src": "1989:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1988:8:2"
            },
            "scope": 523,
            "src": "1941:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "2204:322:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "priceOfUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2214:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2245:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 299,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1673,
                          1691
                        ],
                        "referencedDeclaration": 1673,
                        "src": "2227:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2227:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2214:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 307,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2278:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HeroesMatch_$523",
                                  "typeString": "contract HeroesMatch"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HeroesMatch_$523",
                                  "typeString": "contract HeroesMatch"
                                }
                              ],
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2270:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 305,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2270:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2270:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2270:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "priceOfUrl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "2295:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2270:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2323:48:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        },
                        "value": "please add some ETH to cover for the query fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2261:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:111:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:5:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d65393531366436633061266c6f63617469653d44656e48616167292e6c697665776565725b305d2e74656d70",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:98:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78d7c5d76eee418befa3c716723c0a603b0ca4fda7f08a96335ec2145c098aad",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp\""
                        },
                        "value": "json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78d7c5d76eee418befa3c716723c0a603b0ca4fda7f08a96335ec2145c098aad",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp\""
                        }
                      ],
                      "id": 315,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1731,
                        1773,
                        1819,
                        1863,
                        1906,
                        1951,
                        2000,
                        2047,
                        2094,
                        2143,
                        2196,
                        2247,
                        2285,
                        2326,
                        2370,
                        2411,
                        2457,
                        2506,
                        2558,
                        2607,
                        2661,
                        2718,
                        2778,
                        2835,
                        2897,
                        2962,
                        3030,
                        3095,
                        3165,
                        3238,
                        3314,
                        3387,
                        3434,
                        3483,
                        3536,
                        3587,
                        3625,
                        3666,
                        3710,
                        3751,
                        3797,
                        3846,
                        3898,
                        3947,
                        4001,
                        4058,
                        4118,
                        4175,
                        4237,
                        4302,
                        4370,
                        4435,
                        4505,
                        4578,
                        4654,
                        4727
                      ],
                      "referencedDeclaration": 1731,
                      "src": "2382:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:137:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:137:2"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "2080:64:2",
              "text": "@notice Weather for some fight variation\n @dev extend"
            },
            "functionSelector": "95252560",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "302e3032",
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2193:10:2",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000_by_1",
                      "typeString": "int_const 20000000000000000"
                    },
                    "value": "0.02"
                  }
                ],
                "id": 296,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 294,
                  "name": "minAmount",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 180,
                  "src": "2183:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:21:2"
              }
            ],
            "name": "getTemp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:2:2"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2204:0:2"
            },
            "scope": 523,
            "src": "2149:377:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "2568:52:2",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2596:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2596:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "item",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "2608:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 326,
                      "name": "ReceivedItem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2583:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "EmitStatement",
                  "src": "2578:35:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c4b774b",
            "id": 333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "item",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 333,
                  "src": "2551:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2550:11:2"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:0:2"
            },
            "scope": 523,
            "src": "2532:88:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "3046:100:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "ownerToMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3056:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                          "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3069:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3069:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3056:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Match_$185_storage",
                        "typeString": "struct HeroesMatch.Match storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "_challenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "3089:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "_opponent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "3101:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          }
                        ],
                        "id": 347,
                        "name": "Match",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "3083:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Match_$185_storage_ptr_$",
                          "typeString": "type(struct HeroesMatch.Match storage pointer)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3083:28:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Match_$185_memory_ptr",
                        "typeString": "struct HeroesMatch.Match memory"
                      }
                    },
                    "src": "3056:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Match_$185_storage",
                      "typeString": "struct HeroesMatch.Match storage ref"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:55:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 353,
                    "name": "_challenger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 336,
                    "src": "3128:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                      "typeString": "struct Heroes.HeroesClass memory"
                    }
                  },
                  "functionReturnParameters": 342,
                  "id": 354,
                  "nodeType": "Return",
                  "src": "3121:18:2"
                }
              ]
            },
            "documentation": {
              "id": 334,
              "nodeType": "StructuredDocumentation",
              "src": "2626:251:2",
              "text": "@notice set the fighting arena and say who battles who\n @dev extend\n @param _opponent contains of name skill damage\n @param _challenger contains of name skill damage\n @return _challenger give back what character is made"
            },
            "functionSelector": "580dad8d",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initFight",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "_challenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "2927:37:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 335,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "2927:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_opponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "2966:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 337,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "2966:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2926:76:2"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "3019:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 340,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "3019:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3018:27:2"
            },
            "scope": 523,
            "src": "2908:238:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "3591:687:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 372,
                                        "name": "ownerToMatch",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 203,
                                        "src": "3672:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                          "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                        }
                                      },
                                      "id": 375,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 373,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3685:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 374,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3685:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3672:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Match_$185_storage",
                                        "typeString": "struct HeroesMatch.Match storage ref"
                                      }
                                    },
                                    "id": 376,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 182,
                                    "src": "3672:35:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                      "typeString": "struct Heroes.HeroesClass storage ref"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60,
                                  "src": "3672:40:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 370,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3655:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3655:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3655:58:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 369,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3645:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:69:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "",
                                  "id": 383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3745:2:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 381,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3728:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3728:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3728:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 380,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3718:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3718:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3645:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206368616c6c656e676572",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3751:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82c00f93e7e4f69b3c881159c8b90bd646b6b2efb681f55979f4d88477a02c3a",
                          "typeString": "literal_string \"No challenger\""
                        },
                        "value": "No challenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_82c00f93e7e4f69b3c881159c8b90bd646b6b2efb681f55979f4d88477a02c3a",
                          "typeString": "literal_string \"No challenger\""
                        }
                      ],
                      "id": 368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3637:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:130:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 394,
                                        "name": "ownerToMatch",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 203,
                                        "src": "3812:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                          "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                        }
                                      },
                                      "id": 397,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 395,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3825:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 396,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3825:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3812:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Match_$185_storage",
                                        "typeString": "struct HeroesMatch.Match storage ref"
                                      }
                                    },
                                    "id": 398,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "opponent",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 184,
                                    "src": "3812:33:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                      "typeString": "struct Heroes.HeroesClass storage ref"
                                    }
                                  },
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60,
                                  "src": "3812:38:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 392,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3795:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3795:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3795:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 391,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3785:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3785:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "",
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3883:2:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 403,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3866:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3866:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3866:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 402,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3856:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3856:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3785:102:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206f70706f6e656e74",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3889:13:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4581d4e820ced2545a72ab6fdeae80a70b20531ada2f073208cbca290b064daa",
                          "typeString": "literal_string \"No opponent\""
                        },
                        "value": "No opponent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4581d4e820ced2545a72ab6fdeae80a70b20531ada2f073208cbca290b064daa",
                          "typeString": "literal_string \"No opponent\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3777:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:126:2"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "winner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 443,
                      "src": "3914:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3914:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "randomNumberChallenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3945:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "randomNumberOpponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "3969:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 414,
                      "name": "didChallengerWin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "3928:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) returns (bool)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3914:76:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 419,
                    "name": "winner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "4051:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "4173:99:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4195:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 432,
                                      "name": "ownerToMatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 203,
                                      "src": "4202:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                        "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                      }
                                    },
                                    "id": 435,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 433,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4215:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4215:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4202:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Match_$185_storage",
                                      "typeString": "struct HeroesMatch.Match storage ref"
                                    }
                                  },
                                  "id": 436,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "opponent",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 184,
                                  "src": "4202:33:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                    "typeString": "struct Heroes.HeroesClass storage ref"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "skill_2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66,
                                "src": "4202:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SkillClass_$7010_storage",
                                  "typeString": "struct Skill.SkillClass storage ref"
                                }
                              },
                              "id": 438,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min_skill_damage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7007,
                              "src": "4202:58:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 439,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4194:67:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 367,
                        "id": 440,
                        "nodeType": "Return",
                        "src": "4187:74:2"
                      }
                    ]
                  },
                  "id": 442,
                  "nodeType": "IfStatement",
                  "src": "4048:224:2",
                  "trueBody": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "4059:100:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4081:4:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 421,
                                      "name": "ownerToMatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 203,
                                      "src": "4087:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                        "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                      }
                                    },
                                    "id": 424,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 422,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4100:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 423,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4100:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4087:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Match_$185_storage",
                                      "typeString": "struct HeroesMatch.Match storage ref"
                                    }
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challenger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 182,
                                  "src": "4087:35:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                    "typeString": "struct Heroes.HeroesClass storage ref"
                                  }
                                },
                                "id": 426,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "skill_1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64,
                                "src": "4087:43:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SkillClass_$7010_storage",
                                  "typeString": "struct Skill.SkillClass storage ref"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min_skill_damage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7007,
                              "src": "4087:60:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 428,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4080:68:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 367,
                        "id": 429,
                        "nodeType": "Return",
                        "src": "4073:75:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 357,
              "nodeType": "StructuredDocumentation",
              "src": "3152:287:2",
              "text": "@notice calculate the winning state\n @dev extend\n @param randomNumberChallenger The numbers are random generated from the dApp\n @param randomNumberOpponent The numbers are random generated from the dApp\n @return did challenger win and how much dmg is done"
            },
            "functionSelector": "8668a50c",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginFight",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "randomNumberChallenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3508:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "randomNumberOpponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3537:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3507:56:2"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3580:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3586:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3579:12:2"
            },
            "scope": 523,
            "src": "3488:790:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "4697:469:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 454,
                      "name": "randomNumberChallenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "4710:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "randomNumberOpponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "4735:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4710:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 502,
                    "nodeType": "Block",
                    "src": "4966:194:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 481,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "4997:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 484,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 482,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5010:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5010:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4997:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 182,
                              "src": "4997:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 486,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "5034:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 489,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 487,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5047:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5047:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5034:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 490,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "opponent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "5034:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5069:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 480,
                            "name": "RoundWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4985:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_HeroesClass_$67_memory_ptr_$_t_struct$_HeroesClass_$67_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (struct Heroes.HeroesClass memory,struct Heroes.HeroesClass memory,bool)"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4985:90:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 493,
                        "nodeType": "EmitStatement",
                        "src": "4980:95:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 495,
                              "name": "LOSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "5100:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 496,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5112:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5112:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 494,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "5089:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5089:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 499,
                        "nodeType": "ExpressionStatement",
                        "src": "5089:34:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5144:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 453,
                        "id": 501,
                        "nodeType": "Return",
                        "src": "5137:12:2"
                      }
                    ]
                  },
                  "id": 503,
                  "nodeType": "IfStatement",
                  "src": "4707:453:2",
                  "trueBody": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "4757:195:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 458,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "4788:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 461,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 459,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4801:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4801:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4788:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 462,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 182,
                              "src": "4788:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 463,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "4825:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 466,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 464,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4838:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4838:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4825:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "opponent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "4825:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4860:4:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 457,
                            "name": "RoundWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4776:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_HeroesClass_$67_memory_ptr_$_t_struct$_HeroesClass_$67_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (struct Heroes.HeroesClass memory,struct Heroes.HeroesClass memory,bool)"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4776:89:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 470,
                        "nodeType": "EmitStatement",
                        "src": "4771:94:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 472,
                              "name": "CHAMPION_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "4890:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 473,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4905:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4905:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 471,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "4879:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4879:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 476,
                        "nodeType": "ExpressionStatement",
                        "src": "4879:37:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4937:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 453,
                        "id": 478,
                        "nodeType": "Return",
                        "src": "4930:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 445,
              "nodeType": "StructuredDocumentation",
              "src": "4283:271:2",
              "text": "@notice announce the winner in the event log\n @dev extend\n @param randomNumberChallenger The numbers are random generated from the dApp\n @param randomNumberOpponent The numbers are random generated from the dApp\n @return did challenger win"
            },
            "functionSelector": "df16e362",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "didChallengerWin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "randomNumberChallenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 505,
                  "src": "4620:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4620:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "randomNumberOpponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 505,
                  "src": "4649:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4619:56:2"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 505,
                  "src": "4691:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4690:6:2"
            },
            "scope": 523,
            "src": "4594:572:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "5236:164:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 512,
                            "name": "CHAMPION_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "5262:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 513,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5276:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5276:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 511,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7194,
                          "src": "5254:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5254:33:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75277265206e6f7420746865206368616d70696f6e20616e642063616e6e6f7420696e74696d696461746520746865206172656e61",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5289:57:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c5f4b76985a73aba2b88f17555da6d6e006c8454333a936bd988950b108a227",
                          "typeString": "literal_string \"You're not the champion and cannot intimidate the arena\""
                        },
                        "value": "You're not the champion and cannot intimidate the arena"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c5f4b76985a73aba2b88f17555da6d6e006c8454333a936bd988950b108a227",
                          "typeString": "literal_string \"You're not the champion and cannot intimidate the arena\""
                        }
                      ],
                      "id": 510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5246:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5246:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "5246:101:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "424f5720544f20594f5552204348414d50494f4e20484f45484121",
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5364:29:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5b05b57a57514a46b4e8d4d0bb5794d3078f062060c96dd9ab2c5b27a5cf84ed",
                      "typeString": "literal_string \"BOW TO YOUR CHAMPION HOEHA!\""
                    },
                    "value": "BOW TO YOUR CHAMPION HOEHA!"
                  },
                  "functionReturnParameters": 509,
                  "id": 520,
                  "nodeType": "Return",
                  "src": "5357:36:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fdf35a17",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "showYourPresence",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5197:2:2"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 522,
                  "src": "5221:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5220:15:2"
            },
            "scope": 523,
            "src": "5172:228:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 524,
        "src": "677:4726:2"
      }
    ],
    "src": "77:5326:2"
  },
  "legacyAST": {
    "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Match.sol",
    "exportedSymbols": {
      "HeroesMatch": [
        523
      ]
    },
    "id": 524,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 133,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "77:23:2"
      },
      {
        "id": 134,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:33:2"
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/Heroes.sol",
        "file": "./Heroes.sol",
        "id": 135,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 132,
        "src": "136:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/dapp/contracts/ProvableAPI.sol",
        "file": "./ProvableAPI.sol",
        "id": 136,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 6999,
        "src": "159:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "file": "../../node_modules/@openzeppelin/upgrades-core/contracts/Initializable.sol",
        "id": 137,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 8180,
        "src": "187:84:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "../../node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "id": 138,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 7406,
        "src": "272:77:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jeffrey/token/inleveren/BC3_Jeffrey/PD-12/ChainsGathering/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 139,
        "nodeType": "ImportDirective",
        "scope": 524,
        "sourceUnit": 7515,
        "src": "350:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 141,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6998,
              "src": "701:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6998",
                "typeString": "contract usingProvable"
              }
            },
            "id": 142,
            "nodeType": "InheritanceSpecifier",
            "src": "701:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 143,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8179,
              "src": "716:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8179",
                "typeString": "contract Initializable"
              }
            },
            "id": 144,
            "nodeType": "InheritanceSpecifier",
            "src": "716:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 145,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7405,
              "src": "731:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$7405",
                "typeString": "contract AccessControl"
              }
            },
            "id": 146,
            "nodeType": "InheritanceSpecifier",
            "src": "731:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 147,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7514,
              "src": "746:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7514",
                "typeString": "contract Ownable"
              }
            },
            "id": 148,
            "nodeType": "InheritanceSpecifier",
            "src": "746:7:2"
          }
        ],
        "contractDependencies": [
          131,
          6998,
          7122,
          7405,
          7514,
          8179
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 140,
          "nodeType": "StructuredDocumentation",
          "src": "464:213:2",
          "text": "@title A arena for a 1 on 1 battle\n @author Jeffrey Lo-A-Foe\n @notice You can use this contract for a simple one on one battle \n @dev All function calls are currently implemented without side effects"
        },
        "fullyImplemented": true,
        "id": 523,
        "linearizedBaseContracts": [
          523,
          7514,
          7405,
          7122,
          8179,
          6998
        ],
        "name": "HeroesMatch",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f905c15a",
            "id": 150,
            "mutability": "mutable",
            "name": "deployed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "760:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Heroes_$131",
              "typeString": "contract Heroes"
            },
            "typeName": {
              "contractScope": null,
              "id": 149,
              "name": "Heroes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 131,
              "src": "760:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Heroes_$131",
                "typeString": "contract Heroes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "673402e5",
            "id": 152,
            "mutability": "mutable",
            "name": "temp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "788:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "788:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "43d3b1be",
            "id": 154,
            "mutability": "mutable",
            "name": "priceOfUrl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "813:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 153,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "813:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c50b0fb0",
            "id": 156,
            "mutability": "mutable",
            "name": "season",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "844:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 155,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "844:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "67d8e054",
            "id": 161,
            "mutability": "constant",
            "name": "CHAMPION_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "871:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 157,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "871:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4348414d50494f4e",
                  "id": 159,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "921:10:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d5573",
                    "typeString": "literal_string \"CHAMPION\""
                  },
                  "value": "CHAMPION"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_99339e56b1bd8cc96884f4f8debb5b812e9ef092eb5427d017e605fff91d5573",
                    "typeString": "literal_string \"CHAMPION\""
                  }
                ],
                "id": 158,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "911:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 160,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "911:21:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "38bb0623",
            "id": 166,
            "mutability": "constant",
            "name": "LOSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "938:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 162,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "938:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4c4f534552",
                  "id": 164,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "985:7:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a367",
                    "typeString": "literal_string \"LOSER\""
                  },
                  "value": "LOSER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_49e6510208b7d6a676c3a5226c42f48ec92cdb8b005e43e23eba69de6b98a367",
                    "typeString": "literal_string \"LOSER\""
                  }
                ],
                "id": 163,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "975:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 165,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "975:18:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1032:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1042:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1042:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "1055:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1042:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d4f5245205354414b45204e4545444544",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1773f279ac56432ab72bc9fbc0bacf41ebb67421513b226ddb68f482fdc05b7",
                          "typeString": "literal_string \"MORE STAKE NEEDED\""
                        },
                        "value": "MORE STAKE NEEDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1773f279ac56432ab72bc9fbc0bacf41ebb67421513b226ddb68f482fdc05b7",
                          "typeString": "literal_string \"MORE STAKE NEEDED\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1034:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:50:2"
                },
                {
                  "id": 178,
                  "nodeType": "PlaceholderStatement",
                  "src": "1086:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 180,
            "name": "minAmount",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 180,
                  "src": "1019:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1018:14:2"
            },
            "src": "1000:89:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "HeroesMatch.Match",
            "id": 185,
            "members": [
              {
                "constant": false,
                "id": 182,
                "mutability": "mutable",
                "name": "challenger",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 185,
                "src": "1118:29:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                  "typeString": "struct Heroes.HeroesClass"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 181,
                  "name": "Heroes.HeroesClass",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 67,
                  "src": "1118:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "mutability": "mutable",
                "name": "opponent",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 185,
                "src": "1157:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                  "typeString": "struct Heroes.HeroesClass"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 183,
                  "name": "Heroes.HeroesClass",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 67,
                  "src": "1157:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Match",
            "nodeType": "StructDefinition",
            "scope": 523,
            "src": "1095:96:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 193,
            "name": "RoundWinner",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1215:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 186,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "1215:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "opponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1246:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 188,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "1246:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1275:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1214:73:2"
            },
            "src": "1197:92:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 199,
            "name": "ReceivedItem",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "1313:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "item",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 199,
                  "src": "1329:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1312:27:2"
            },
            "src": "1294:46:2"
          },
          {
            "constant": false,
            "functionSelector": "ae025c0c",
            "id": 203,
            "mutability": "mutable",
            "name": "ownerToMatch",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 523,
            "src": "1346:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
              "typeString": "mapping(address => struct HeroesMatch.Match)"
            },
            "typeName": {
              "id": 202,
              "keyType": {
                "id": 200,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1354:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1346:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                "typeString": "mapping(address => struct HeroesMatch.Match)"
              },
              "valueType": {
                "contractScope": null,
                "id": 201,
                "name": "Match",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 185,
                "src": "1365:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Match_$185_storage_ptr",
                  "typeString": "struct HeroesMatch.Match"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1436:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 209,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 206,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 205,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7514,
                  "src": "1419:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$7514_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1419:9:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1409:2:2"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:2"
            },
            "scope": 523,
            "src": "1398:40:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1630
            ],
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "1539:88:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1553:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1553:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 219,
                        "name": "provable_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4752,
                        "src": "1567:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1567:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1553:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 225,
                  "nodeType": "IfStatement",
                  "src": "1549:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 222,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "1589:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1589:8:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 224,
                    "nodeType": "ExpressionStatement",
                    "src": "1589:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1607:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "1614:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1607:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:13:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1523:8:2"
            },
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "1464:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 231,
                  "src": "1500:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1463:59:2"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:2"
            },
            "scope": 523,
            "src": "1444:183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "1695:33:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1705:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "_season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "1714:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1705:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:16:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f62d1888",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 236,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 235,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8152,
                  "src": "1683:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1683:11:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_season",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 243,
                  "src": "1653:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1652:23:2"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:0:2"
            },
            "scope": 523,
            "src": "1633:95:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "1783:33:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1793:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 249,
                      "name": "_season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "1802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1793:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:16:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2d1e7f86",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSeason",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_season",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 253,
                  "src": "1753:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1752:23:2"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:2"
            },
            "scope": 523,
            "src": "1734:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "1861:74:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 258,
                        "name": "deployed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "1871:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Heroes_$131",
                          "typeString": "contract Heroes"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7041,
                      "src": "1871:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1871:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1899:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1925:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1917:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 265,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1917:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1917:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 264,
                        "name": "Heroes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1910:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Heroes_$131_$",
                          "typeString": "type(contract Heroes)"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1910:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "src": "1899:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:29:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "897822b1",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7463,
                  "src": "1852:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1852:9:2"
              }
            ],
            "name": "destroyHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:2:2"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:2"
            },
            "scope": 523,
            "src": "1822:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "1997:77:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 280,
                      "name": "deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2007:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2018:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Heroes_$131_$",
                            "typeString": "function () returns (contract Heroes)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 281,
                            "name": "Heroes",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 131,
                            "src": "2022:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Heroes_$131",
                              "typeString": "contract Heroes"
                            }
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "salt"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30783030",
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2035:4:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x00"
                          }
                        ],
                        "src": "2018:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Heroes_$131_$salt",
                          "typeString": "function () returns (contract Heroes)"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Heroes_$131",
                        "typeString": "contract Heroes"
                      }
                    },
                    "src": "2007:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2007:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 288,
                    "name": "deployed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "2059:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 289,
                  "nodeType": "Return",
                  "src": "2052:15:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c27567c9",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 275,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7463,
                  "src": "1970:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1970:9:2"
              }
            ],
            "name": "deployHero",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1960:2:2"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 291,
                  "src": "1989:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Heroes_$131",
                    "typeString": "contract Heroes"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 277,
                    "name": "Heroes",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 131,
                    "src": "1989:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Heroes_$131",
                      "typeString": "contract Heroes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1988:8:2"
            },
            "scope": 523,
            "src": "1941:133:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "2204:322:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "priceOfUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2214:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2245:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 299,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1673,
                          1691
                        ],
                        "referencedDeclaration": 1673,
                        "src": "2227:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2227:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2214:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 307,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2278:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HeroesMatch_$523",
                                  "typeString": "contract HeroesMatch"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HeroesMatch_$523",
                                  "typeString": "contract HeroesMatch"
                                }
                              ],
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2270:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 305,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2270:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2270:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2270:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "priceOfUrl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "2295:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2270:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2323:48:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        },
                        "value": "please add some ETH to cover for the query fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2261:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2261:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:111:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:5:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d65393531366436633061266c6f63617469653d44656e48616167292e6c697665776565725b305d2e74656d70",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:98:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78d7c5d76eee418befa3c716723c0a603b0ca4fda7f08a96335ec2145c098aad",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp\""
                        },
                        "value": "json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78d7c5d76eee418befa3c716723c0a603b0ca4fda7f08a96335ec2145c098aad",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=e9516d6c0a&locatie=DenHaag).liveweer[0].temp\""
                        }
                      ],
                      "id": 315,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1731,
                        1773,
                        1819,
                        1863,
                        1906,
                        1951,
                        2000,
                        2047,
                        2094,
                        2143,
                        2196,
                        2247,
                        2285,
                        2326,
                        2370,
                        2411,
                        2457,
                        2506,
                        2558,
                        2607,
                        2661,
                        2718,
                        2778,
                        2835,
                        2897,
                        2962,
                        3030,
                        3095,
                        3165,
                        3238,
                        3314,
                        3387,
                        3434,
                        3483,
                        3536,
                        3587,
                        3625,
                        3666,
                        3710,
                        3751,
                        3797,
                        3846,
                        3898,
                        3947,
                        4001,
                        4058,
                        4118,
                        4175,
                        4237,
                        4302,
                        4370,
                        4435,
                        4505,
                        4578,
                        4654,
                        4727
                      ],
                      "referencedDeclaration": 1731,
                      "src": "2382:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:137:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:137:2"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "2080:64:2",
              "text": "@notice Weather for some fight variation\n @dev extend"
            },
            "functionSelector": "95252560",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "302e3032",
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2193:10:2",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000_by_1",
                      "typeString": "int_const 20000000000000000"
                    },
                    "value": "0.02"
                  }
                ],
                "id": 296,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 294,
                  "name": "minAmount",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 180,
                  "src": "2183:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:21:2"
              }
            ],
            "name": "getTemp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:2:2"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2204:0:2"
            },
            "scope": 523,
            "src": "2149:377:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "2568:52:2",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2596:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2596:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "item",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "2608:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 326,
                      "name": "ReceivedItem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2583:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "EmitStatement",
                  "src": "2578:35:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1c4b774b",
            "id": 333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "item",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 333,
                  "src": "2551:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2550:11:2"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:0:2"
            },
            "scope": 523,
            "src": "2532:88:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "3046:100:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 343,
                        "name": "ownerToMatch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3056:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                          "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3069:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3069:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3056:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Match_$185_storage",
                        "typeString": "struct HeroesMatch.Match storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "_challenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 336,
                          "src": "3089:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "_opponent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "3101:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                            "typeString": "struct Heroes.HeroesClass memory"
                          }
                        ],
                        "id": 347,
                        "name": "Match",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "3083:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Match_$185_storage_ptr_$",
                          "typeString": "type(struct HeroesMatch.Match storage pointer)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3083:28:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Match_$185_memory_ptr",
                        "typeString": "struct HeroesMatch.Match memory"
                      }
                    },
                    "src": "3056:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Match_$185_storage",
                      "typeString": "struct HeroesMatch.Match storage ref"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:55:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 353,
                    "name": "_challenger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 336,
                    "src": "3128:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                      "typeString": "struct Heroes.HeroesClass memory"
                    }
                  },
                  "functionReturnParameters": 342,
                  "id": 354,
                  "nodeType": "Return",
                  "src": "3121:18:2"
                }
              ]
            },
            "documentation": {
              "id": 334,
              "nodeType": "StructuredDocumentation",
              "src": "2626:251:2",
              "text": "@notice set the fighting arena and say who battles who\n @dev extend\n @param _opponent contains of name skill damage\n @param _challenger contains of name skill damage\n @return _challenger give back what character is made"
            },
            "functionSelector": "580dad8d",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initFight",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "_challenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "2927:37:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 335,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "2927:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_opponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "2966:35:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 337,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "2966:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2926:76:2"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 356,
                  "src": "3019:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeroesClass_$67_memory_ptr",
                    "typeString": "struct Heroes.HeroesClass"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 340,
                    "name": "Heroes.HeroesClass",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 67,
                    "src": "3019:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage_ptr",
                      "typeString": "struct Heroes.HeroesClass"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3018:27:2"
            },
            "scope": 523,
            "src": "2908:238:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "3591:687:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 372,
                                        "name": "ownerToMatch",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 203,
                                        "src": "3672:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                          "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                        }
                                      },
                                      "id": 375,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 373,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3685:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 374,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3685:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3672:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Match_$185_storage",
                                        "typeString": "struct HeroesMatch.Match storage ref"
                                      }
                                    },
                                    "id": 376,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 182,
                                    "src": "3672:35:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                      "typeString": "struct Heroes.HeroesClass storage ref"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60,
                                  "src": "3672:40:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 370,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3655:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3655:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3655:58:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 369,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3645:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3645:69:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "",
                                  "id": 383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3745:2:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 381,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3728:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3728:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3728:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 380,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3718:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3718:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3645:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206368616c6c656e676572",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3751:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82c00f93e7e4f69b3c881159c8b90bd646b6b2efb681f55979f4d88477a02c3a",
                          "typeString": "literal_string \"No challenger\""
                        },
                        "value": "No challenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_82c00f93e7e4f69b3c881159c8b90bd646b6b2efb681f55979f4d88477a02c3a",
                          "typeString": "literal_string \"No challenger\""
                        }
                      ],
                      "id": 368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3637:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:130:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 394,
                                        "name": "ownerToMatch",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 203,
                                        "src": "3812:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                          "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                        }
                                      },
                                      "id": 397,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 395,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3825:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 396,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "3825:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3812:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Match_$185_storage",
                                        "typeString": "struct HeroesMatch.Match storage ref"
                                      }
                                    },
                                    "id": 398,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "opponent",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 184,
                                    "src": "3812:33:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                      "typeString": "struct Heroes.HeroesClass storage ref"
                                    }
                                  },
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60,
                                  "src": "3812:38:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 392,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3795:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3795:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3795:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 391,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3785:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3785:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "",
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3883:2:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 403,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3866:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3866:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3866:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 402,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3856:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3856:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3785:102:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206f70706f6e656e74",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3889:13:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4581d4e820ced2545a72ab6fdeae80a70b20531ada2f073208cbca290b064daa",
                          "typeString": "literal_string \"No opponent\""
                        },
                        "value": "No opponent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4581d4e820ced2545a72ab6fdeae80a70b20531ada2f073208cbca290b064daa",
                          "typeString": "literal_string \"No opponent\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3777:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:126:2"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "winner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 443,
                      "src": "3914:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3914:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "randomNumberChallenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3945:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "randomNumberOpponent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "3969:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 414,
                      "name": "didChallengerWin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "3928:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) returns (bool)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3914:76:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 419,
                    "name": "winner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 413,
                    "src": "4051:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "4173:99:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4195:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 432,
                                      "name": "ownerToMatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 203,
                                      "src": "4202:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                        "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                      }
                                    },
                                    "id": 435,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 433,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4215:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4215:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4202:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Match_$185_storage",
                                      "typeString": "struct HeroesMatch.Match storage ref"
                                    }
                                  },
                                  "id": 436,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "opponent",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 184,
                                  "src": "4202:33:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                    "typeString": "struct Heroes.HeroesClass storage ref"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "skill_2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66,
                                "src": "4202:41:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SkillClass_$7010_storage",
                                  "typeString": "struct Skill.SkillClass storage ref"
                                }
                              },
                              "id": 438,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min_skill_damage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7007,
                              "src": "4202:58:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 439,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4194:67:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 367,
                        "id": 440,
                        "nodeType": "Return",
                        "src": "4187:74:2"
                      }
                    ]
                  },
                  "id": 442,
                  "nodeType": "IfStatement",
                  "src": "4048:224:2",
                  "trueBody": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "4059:100:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4081:4:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 421,
                                      "name": "ownerToMatch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 203,
                                      "src": "4087:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                        "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                      }
                                    },
                                    "id": 424,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 422,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4100:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 423,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4100:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4087:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Match_$185_storage",
                                      "typeString": "struct HeroesMatch.Match storage ref"
                                    }
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challenger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 182,
                                  "src": "4087:35:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                    "typeString": "struct Heroes.HeroesClass storage ref"
                                  }
                                },
                                "id": 426,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "skill_1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64,
                                "src": "4087:43:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SkillClass_$7010_storage",
                                  "typeString": "struct Skill.SkillClass storage ref"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min_skill_damage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7007,
                              "src": "4087:60:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 428,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4080:68:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 367,
                        "id": 429,
                        "nodeType": "Return",
                        "src": "4073:75:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 357,
              "nodeType": "StructuredDocumentation",
              "src": "3152:287:2",
              "text": "@notice calculate the winning state\n @dev extend\n @param randomNumberChallenger The numbers are random generated from the dApp\n @param randomNumberOpponent The numbers are random generated from the dApp\n @return did challenger win and how much dmg is done"
            },
            "functionSelector": "8668a50c",
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginFight",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "randomNumberChallenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3508:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "randomNumberOpponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3537:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3507:56:2"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3580:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 444,
                  "src": "3586:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3579:12:2"
            },
            "scope": 523,
            "src": "3488:790:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "4697:469:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 454,
                      "name": "randomNumberChallenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "4710:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "randomNumberOpponent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "4735:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4710:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 502,
                    "nodeType": "Block",
                    "src": "4966:194:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 481,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "4997:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 484,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 482,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5010:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5010:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4997:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 182,
                              "src": "4997:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 486,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "5034:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 489,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 487,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5047:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5047:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5034:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 490,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "opponent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "5034:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5069:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 480,
                            "name": "RoundWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4985:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_HeroesClass_$67_memory_ptr_$_t_struct$_HeroesClass_$67_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (struct Heroes.HeroesClass memory,struct Heroes.HeroesClass memory,bool)"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4985:90:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 493,
                        "nodeType": "EmitStatement",
                        "src": "4980:95:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 495,
                              "name": "LOSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "5100:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 496,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5112:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5112:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 494,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "5089:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5089:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 499,
                        "nodeType": "ExpressionStatement",
                        "src": "5089:34:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5144:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 453,
                        "id": 501,
                        "nodeType": "Return",
                        "src": "5137:12:2"
                      }
                    ]
                  },
                  "id": 503,
                  "nodeType": "IfStatement",
                  "src": "4707:453:2",
                  "trueBody": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "4757:195:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 458,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "4788:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 461,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 459,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4801:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4801:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4788:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 462,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 182,
                              "src": "4788:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 463,
                                  "name": "ownerToMatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "4825:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Match_$185_storage_$",
                                    "typeString": "mapping(address => struct HeroesMatch.Match storage ref)"
                                  }
                                },
                                "id": 466,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 464,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4838:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4838:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4825:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Match_$185_storage",
                                  "typeString": "struct HeroesMatch.Match storage ref"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "opponent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "4825:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4860:4:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_HeroesClass_$67_storage",
                                "typeString": "struct Heroes.HeroesClass storage ref"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 457,
                            "name": "RoundWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4776:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_HeroesClass_$67_memory_ptr_$_t_struct$_HeroesClass_$67_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (struct Heroes.HeroesClass memory,struct Heroes.HeroesClass memory,bool)"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4776:89:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 470,
                        "nodeType": "EmitStatement",
                        "src": "4771:94:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 472,
                              "name": "CHAMPION_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "4890:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 473,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4905:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4905:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 471,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "4879:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4879:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 476,
                        "nodeType": "ExpressionStatement",
                        "src": "4879:37:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4937:4:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 453,
                        "id": 478,
                        "nodeType": "Return",
                        "src": "4930:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 445,
              "nodeType": "StructuredDocumentation",
              "src": "4283:271:2",
              "text": "@notice announce the winner in the event log\n @dev extend\n @param randomNumberChallenger The numbers are random generated from the dApp\n @param randomNumberOpponent The numbers are random generated from the dApp\n @return did challenger win"
            },
            "functionSelector": "df16e362",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "didChallengerWin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "randomNumberChallenger",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 505,
                  "src": "4620:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4620:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "randomNumberOpponent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 505,
                  "src": "4649:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4619:56:2"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 505,
                  "src": "4691:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4690:6:2"
            },
            "scope": 523,
            "src": "4594:572:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "5236:164:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 512,
                            "name": "CHAMPION_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "5262:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 513,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5276:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5276:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 511,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7194,
                          "src": "5254:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5254:33:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75277265206e6f7420746865206368616d70696f6e20616e642063616e6e6f7420696e74696d696461746520746865206172656e61",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5289:57:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c5f4b76985a73aba2b88f17555da6d6e006c8454333a936bd988950b108a227",
                          "typeString": "literal_string \"You're not the champion and cannot intimidate the arena\""
                        },
                        "value": "You're not the champion and cannot intimidate the arena"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c5f4b76985a73aba2b88f17555da6d6e006c8454333a936bd988950b108a227",
                          "typeString": "literal_string \"You're not the champion and cannot intimidate the arena\""
                        }
                      ],
                      "id": 510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5246:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5246:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "5246:101:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "424f5720544f20594f5552204348414d50494f4e20484f45484121",
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5364:29:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5b05b57a57514a46b4e8d4d0bb5794d3078f062060c96dd9ab2c5b27a5cf84ed",
                      "typeString": "literal_string \"BOW TO YOUR CHAMPION HOEHA!\""
                    },
                    "value": "BOW TO YOUR CHAMPION HOEHA!"
                  },
                  "functionReturnParameters": 509,
                  "id": 520,
                  "nodeType": "Return",
                  "src": "5357:36:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fdf35a17",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "showYourPresence",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5197:2:2"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 522,
                  "src": "5221:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5220:15:2"
            },
            "scope": 523,
            "src": "5172:228:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 524,
        "src": "677:4726:2"
      }
    ],
    "src": "77:5326:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xbc4b92d339fc9a0c95f60c056c191fea7200e8580924dc0a223bfaa7ab8c1e67": {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "rarity",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "skill_name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "min_skill_damage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "max_skill_damage",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Skill.SkillClass",
                  "name": "skill_1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "skill_name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "min_skill_damage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "max_skill_damage",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Skill.SkillClass",
                  "name": "skill_2",
                  "type": "tuple"
                }
              ],
              "indexed": false,
              "internalType": "struct Heroes.HeroesClass",
              "name": "challenger",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "rarity",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "skill_name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "min_skill_damage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "max_skill_damage",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Skill.SkillClass",
                  "name": "skill_1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "skill_name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "min_skill_damage",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "max_skill_damage",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Skill.SkillClass",
                  "name": "skill_2",
                  "type": "tuple"
                }
              ],
              "indexed": false,
              "internalType": "struct Heroes.HeroesClass",
              "name": "opponent",
              "type": "tuple"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ],
          "name": "RoundWinner",
          "type": "event"
        },
        "0x6a25488c7d3aabc1977d19779cf2091613a2f71d0a0d13880837c533807c93f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "item",
              "type": "uint256"
            }
          ],
          "name": "ReceivedItem",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x68aD2A3ec2Ca91649e50aEf062642c8AC49e6ac5",
      "transactionHash": "0x940f6c42b0ae7a7edcf19027b8fcc17b4e2920d10ebc51588a40d3d2ff6f58ce"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-19T01:46:24.145Z",
  "devdoc": {
    "author": "Jeffrey Lo-A-Foe",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "beginFight(uint256,uint256)": {
        "details": "extend",
        "params": {
          "randomNumberChallenger": "The numbers are random generated from the dApp",
          "randomNumberOpponent": "The numbers are random generated from the dApp"
        },
        "returns": {
          "_0": "did challenger win and how much dmg is done"
        }
      },
      "didChallengerWin(uint256,uint256)": {
        "details": "extend",
        "params": {
          "randomNumberChallenger": "The numbers are random generated from the dApp",
          "randomNumberOpponent": "The numbers are random generated from the dApp"
        },
        "returns": {
          "_0": "did challenger win"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getTemp()": {
        "details": "extend"
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initFight((string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)),(string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)))": {
        "details": "extend",
        "params": {
          "_challenger": "contains of name skill damage",
          "_opponent": "contains of name skill damage"
        },
        "returns": {
          "_0": "_challenger give back what character is made"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A arena for a 1 on 1 battle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "beginFight(uint256,uint256)": {
        "notice": "calculate the winning state"
      },
      "didChallengerWin(uint256,uint256)": {
        "notice": "announce the winner in the event log"
      },
      "getTemp()": {
        "notice": "Weather for some fight variation"
      },
      "initFight((string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)),(string,uint256,(string,string,uint256,uint256),(string,string,uint256,uint256)))": {
        "notice": "set the fighting arena and say who battles who"
      }
    },
    "notice": "You can use this contract for a simple one on one battle ",
    "version": 1
  }
}